// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: protocol.proto

package protocol

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// request
type Request struct {
	Session int32 `protobuf:"varint,1,opt,name=session,proto3" json:"session,omitempty"`
	// ----------------网关模块接口-----------
	//
	// Types that are valid to be assigned to Gate:
	//	*Request_BindService
	//	*Request_KickOut
	//	*Request_PushMessage
	Gate isRequest_Gate `protobuf_oneof:"gate"`
	// Types that are valid to be assigned to Passport:
	//	*Request_UserRegister
	//	*Request_UserLogin
	//	*Request_TokenLogin
	Passport isRequest_Passport `protobuf_oneof:"passport"`
	// -----------------游戏模块接口---------------
	//
	// Types that are valid to be assigned to Game:
	//	*Request_LoginRole
	//	*Request_ChangeNickname
	Game isRequest_Game `protobuf_oneof:"game"`
	// -----------------房间服务器接口-------------
	//
	// Types that are valid to be assigned to Room:
	//	*Request_ShowUser
	//	*Request_GetRoomInfo
	//	*Request_JoinRoom
	//	*Request_RoomCreate
	//	*Request_GetBigoData
	//	*Request_OnPlayerStateChange
	//	*Request_OnGameStateChange
	//	*Request_GameReady
	//	*Request_GameData
	//	*Request_FrameData
	//	*Request_UploadGameResult
	//	*Request_UpdateBigoData
	//	*Request_ContinueJoinGame
	//	*Request_PreJoinGame
	//	*Request_RequestJoinGame
	//	*Request_RespondJoinGame
	//	*Request_BroadcastViewer
	Room isRequest_Room `protobuf_oneof:"room"`
	// Types that are valid to be assigned to Hall:
	//	*Request_QuickMatch
	Hall isRequest_Hall `protobuf_oneof:"hall"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptorProtocol, []int{0} }

type isRequest_Gate interface {
	isRequest_Gate()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isRequest_Passport interface {
	isRequest_Passport()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isRequest_Game interface {
	isRequest_Game()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isRequest_Room interface {
	isRequest_Room()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isRequest_Hall interface {
	isRequest_Hall()
	MarshalTo([]byte) (int, error)
	Size() int
}

type Request_BindService struct {
	BindService *BindService `protobuf:"bytes,5,opt,name=bindService,oneof"`
}
type Request_KickOut struct {
	KickOut *KickOut `protobuf:"bytes,10,opt,name=kickOut,oneof"`
}
type Request_PushMessage struct {
	PushMessage *PushMessage `protobuf:"bytes,11,opt,name=pushMessage,oneof"`
}
type Request_UserRegister struct {
	UserRegister *UserRegister `protobuf:"bytes,20,opt,name=userRegister,oneof"`
}
type Request_UserLogin struct {
	UserLogin *UserLogin `protobuf:"bytes,21,opt,name=userLogin,oneof"`
}
type Request_TokenLogin struct {
	TokenLogin *TokenLogin `protobuf:"bytes,22,opt,name=tokenLogin,oneof"`
}
type Request_LoginRole struct {
	LoginRole *LoginRole `protobuf:"bytes,51,opt,name=loginRole,oneof"`
}
type Request_ChangeNickname struct {
	ChangeNickname *ChangeNickname `protobuf:"bytes,52,opt,name=changeNickname,oneof"`
}
type Request_ShowUser struct {
	ShowUser *ShowUser `protobuf:"bytes,100,opt,name=showUser,oneof"`
}
type Request_GetRoomInfo struct {
	GetRoomInfo *GetRoomInfo `protobuf:"bytes,101,opt,name=getRoomInfo,oneof"`
}
type Request_JoinRoom struct {
	JoinRoom *JoinRoom `protobuf:"bytes,102,opt,name=joinRoom,oneof"`
}
type Request_RoomCreate struct {
	RoomCreate *RoomCreate `protobuf:"bytes,103,opt,name=roomCreate,oneof"`
}
type Request_GetBigoData struct {
	GetBigoData *GetBigoData `protobuf:"bytes,104,opt,name=getBigoData,oneof"`
}
type Request_OnPlayerStateChange struct {
	OnPlayerStateChange *OnPlayerStateChange `protobuf:"bytes,105,opt,name=onPlayerStateChange,oneof"`
}
type Request_OnGameStateChange struct {
	OnGameStateChange *OnGameStateChange `protobuf:"bytes,106,opt,name=onGameStateChange,oneof"`
}
type Request_GameReady struct {
	GameReady *GameReady `protobuf:"bytes,121,opt,name=gameReady,oneof"`
}
type Request_GameData struct {
	GameData *GameData `protobuf:"bytes,122,opt,name=gameData,oneof"`
}
type Request_FrameData struct {
	FrameData *FrameData `protobuf:"bytes,123,opt,name=frameData,oneof"`
}
type Request_UploadGameResult struct {
	UploadGameResult *UploadGameResult `protobuf:"bytes,124,opt,name=uploadGameResult,oneof"`
}
type Request_UpdateBigoData struct {
	UpdateBigoData *UpdateBigoData `protobuf:"bytes,125,opt,name=updateBigoData,oneof"`
}
type Request_ContinueJoinGame struct {
	ContinueJoinGame *ContinueJoinGame `protobuf:"bytes,127,opt,name=continueJoinGame,oneof"`
}
type Request_PreJoinGame struct {
	PreJoinGame *PreJoinGame `protobuf:"bytes,128,opt,name=preJoinGame,oneof"`
}
type Request_RequestJoinGame struct {
	RequestJoinGame *RequestJoinGame `protobuf:"bytes,129,opt,name=requestJoinGame,oneof"`
}
type Request_RespondJoinGame struct {
	RespondJoinGame *RespondJoinGame `protobuf:"bytes,130,opt,name=respondJoinGame,oneof"`
}
type Request_BroadcastViewer struct {
	BroadcastViewer *BroadcastViewer `protobuf:"bytes,131,opt,name=broadcastViewer,oneof"`
}
type Request_QuickMatch struct {
	QuickMatch *QuickMatch `protobuf:"bytes,200,opt,name=quickMatch,oneof"`
}

func (*Request_BindService) isRequest_Gate()         {}
func (*Request_KickOut) isRequest_Gate()             {}
func (*Request_PushMessage) isRequest_Gate()         {}
func (*Request_UserRegister) isRequest_Passport()    {}
func (*Request_UserLogin) isRequest_Passport()       {}
func (*Request_TokenLogin) isRequest_Passport()      {}
func (*Request_LoginRole) isRequest_Game()           {}
func (*Request_ChangeNickname) isRequest_Game()      {}
func (*Request_ShowUser) isRequest_Room()            {}
func (*Request_GetRoomInfo) isRequest_Room()         {}
func (*Request_JoinRoom) isRequest_Room()            {}
func (*Request_RoomCreate) isRequest_Room()          {}
func (*Request_GetBigoData) isRequest_Room()         {}
func (*Request_OnPlayerStateChange) isRequest_Room() {}
func (*Request_OnGameStateChange) isRequest_Room()   {}
func (*Request_GameReady) isRequest_Room()           {}
func (*Request_GameData) isRequest_Room()            {}
func (*Request_FrameData) isRequest_Room()           {}
func (*Request_UploadGameResult) isRequest_Room()    {}
func (*Request_UpdateBigoData) isRequest_Room()      {}
func (*Request_ContinueJoinGame) isRequest_Room()    {}
func (*Request_PreJoinGame) isRequest_Room()         {}
func (*Request_RequestJoinGame) isRequest_Room()     {}
func (*Request_RespondJoinGame) isRequest_Room()     {}
func (*Request_BroadcastViewer) isRequest_Room()     {}
func (*Request_QuickMatch) isRequest_Hall()          {}

func (m *Request) GetGate() isRequest_Gate {
	if m != nil {
		return m.Gate
	}
	return nil
}
func (m *Request) GetPassport() isRequest_Passport {
	if m != nil {
		return m.Passport
	}
	return nil
}
func (m *Request) GetGame() isRequest_Game {
	if m != nil {
		return m.Game
	}
	return nil
}
func (m *Request) GetRoom() isRequest_Room {
	if m != nil {
		return m.Room
	}
	return nil
}
func (m *Request) GetHall() isRequest_Hall {
	if m != nil {
		return m.Hall
	}
	return nil
}

func (m *Request) GetSession() int32 {
	if m != nil {
		return m.Session
	}
	return 0
}

func (m *Request) GetBindService() *BindService {
	if x, ok := m.GetGate().(*Request_BindService); ok {
		return x.BindService
	}
	return nil
}

func (m *Request) GetKickOut() *KickOut {
	if x, ok := m.GetGate().(*Request_KickOut); ok {
		return x.KickOut
	}
	return nil
}

func (m *Request) GetPushMessage() *PushMessage {
	if x, ok := m.GetGate().(*Request_PushMessage); ok {
		return x.PushMessage
	}
	return nil
}

func (m *Request) GetUserRegister() *UserRegister {
	if x, ok := m.GetPassport().(*Request_UserRegister); ok {
		return x.UserRegister
	}
	return nil
}

func (m *Request) GetUserLogin() *UserLogin {
	if x, ok := m.GetPassport().(*Request_UserLogin); ok {
		return x.UserLogin
	}
	return nil
}

func (m *Request) GetTokenLogin() *TokenLogin {
	if x, ok := m.GetPassport().(*Request_TokenLogin); ok {
		return x.TokenLogin
	}
	return nil
}

func (m *Request) GetLoginRole() *LoginRole {
	if x, ok := m.GetGame().(*Request_LoginRole); ok {
		return x.LoginRole
	}
	return nil
}

func (m *Request) GetChangeNickname() *ChangeNickname {
	if x, ok := m.GetGame().(*Request_ChangeNickname); ok {
		return x.ChangeNickname
	}
	return nil
}

func (m *Request) GetShowUser() *ShowUser {
	if x, ok := m.GetRoom().(*Request_ShowUser); ok {
		return x.ShowUser
	}
	return nil
}

func (m *Request) GetGetRoomInfo() *GetRoomInfo {
	if x, ok := m.GetRoom().(*Request_GetRoomInfo); ok {
		return x.GetRoomInfo
	}
	return nil
}

func (m *Request) GetJoinRoom() *JoinRoom {
	if x, ok := m.GetRoom().(*Request_JoinRoom); ok {
		return x.JoinRoom
	}
	return nil
}

func (m *Request) GetRoomCreate() *RoomCreate {
	if x, ok := m.GetRoom().(*Request_RoomCreate); ok {
		return x.RoomCreate
	}
	return nil
}

func (m *Request) GetGetBigoData() *GetBigoData {
	if x, ok := m.GetRoom().(*Request_GetBigoData); ok {
		return x.GetBigoData
	}
	return nil
}

func (m *Request) GetOnPlayerStateChange() *OnPlayerStateChange {
	if x, ok := m.GetRoom().(*Request_OnPlayerStateChange); ok {
		return x.OnPlayerStateChange
	}
	return nil
}

func (m *Request) GetOnGameStateChange() *OnGameStateChange {
	if x, ok := m.GetRoom().(*Request_OnGameStateChange); ok {
		return x.OnGameStateChange
	}
	return nil
}

func (m *Request) GetGameReady() *GameReady {
	if x, ok := m.GetRoom().(*Request_GameReady); ok {
		return x.GameReady
	}
	return nil
}

func (m *Request) GetGameData() *GameData {
	if x, ok := m.GetRoom().(*Request_GameData); ok {
		return x.GameData
	}
	return nil
}

func (m *Request) GetFrameData() *FrameData {
	if x, ok := m.GetRoom().(*Request_FrameData); ok {
		return x.FrameData
	}
	return nil
}

func (m *Request) GetUploadGameResult() *UploadGameResult {
	if x, ok := m.GetRoom().(*Request_UploadGameResult); ok {
		return x.UploadGameResult
	}
	return nil
}

func (m *Request) GetUpdateBigoData() *UpdateBigoData {
	if x, ok := m.GetRoom().(*Request_UpdateBigoData); ok {
		return x.UpdateBigoData
	}
	return nil
}

func (m *Request) GetContinueJoinGame() *ContinueJoinGame {
	if x, ok := m.GetRoom().(*Request_ContinueJoinGame); ok {
		return x.ContinueJoinGame
	}
	return nil
}

func (m *Request) GetPreJoinGame() *PreJoinGame {
	if x, ok := m.GetRoom().(*Request_PreJoinGame); ok {
		return x.PreJoinGame
	}
	return nil
}

func (m *Request) GetRequestJoinGame() *RequestJoinGame {
	if x, ok := m.GetRoom().(*Request_RequestJoinGame); ok {
		return x.RequestJoinGame
	}
	return nil
}

func (m *Request) GetRespondJoinGame() *RespondJoinGame {
	if x, ok := m.GetRoom().(*Request_RespondJoinGame); ok {
		return x.RespondJoinGame
	}
	return nil
}

func (m *Request) GetBroadcastViewer() *BroadcastViewer {
	if x, ok := m.GetRoom().(*Request_BroadcastViewer); ok {
		return x.BroadcastViewer
	}
	return nil
}

func (m *Request) GetQuickMatch() *QuickMatch {
	if x, ok := m.GetHall().(*Request_QuickMatch); ok {
		return x.QuickMatch
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Request) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Request_OneofMarshaler, _Request_OneofUnmarshaler, _Request_OneofSizer, []interface{}{
		(*Request_BindService)(nil),
		(*Request_KickOut)(nil),
		(*Request_PushMessage)(nil),
		(*Request_UserRegister)(nil),
		(*Request_UserLogin)(nil),
		(*Request_TokenLogin)(nil),
		(*Request_LoginRole)(nil),
		(*Request_ChangeNickname)(nil),
		(*Request_ShowUser)(nil),
		(*Request_GetRoomInfo)(nil),
		(*Request_JoinRoom)(nil),
		(*Request_RoomCreate)(nil),
		(*Request_GetBigoData)(nil),
		(*Request_OnPlayerStateChange)(nil),
		(*Request_OnGameStateChange)(nil),
		(*Request_GameReady)(nil),
		(*Request_GameData)(nil),
		(*Request_FrameData)(nil),
		(*Request_UploadGameResult)(nil),
		(*Request_UpdateBigoData)(nil),
		(*Request_ContinueJoinGame)(nil),
		(*Request_PreJoinGame)(nil),
		(*Request_RequestJoinGame)(nil),
		(*Request_RespondJoinGame)(nil),
		(*Request_BroadcastViewer)(nil),
		(*Request_QuickMatch)(nil),
	}
}

func _Request_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Request)
	// gate
	switch x := m.Gate.(type) {
	case *Request_BindService:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BindService); err != nil {
			return err
		}
	case *Request_KickOut:
		_ = b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.KickOut); err != nil {
			return err
		}
	case *Request_PushMessage:
		_ = b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PushMessage); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Request.Gate has unexpected type %T", x)
	}
	// passport
	switch x := m.Passport.(type) {
	case *Request_UserRegister:
		_ = b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserRegister); err != nil {
			return err
		}
	case *Request_UserLogin:
		_ = b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserLogin); err != nil {
			return err
		}
	case *Request_TokenLogin:
		_ = b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TokenLogin); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Request.Passport has unexpected type %T", x)
	}
	// game
	switch x := m.Game.(type) {
	case *Request_LoginRole:
		_ = b.EncodeVarint(51<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LoginRole); err != nil {
			return err
		}
	case *Request_ChangeNickname:
		_ = b.EncodeVarint(52<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChangeNickname); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Request.Game has unexpected type %T", x)
	}
	// room
	switch x := m.Room.(type) {
	case *Request_ShowUser:
		_ = b.EncodeVarint(100<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ShowUser); err != nil {
			return err
		}
	case *Request_GetRoomInfo:
		_ = b.EncodeVarint(101<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetRoomInfo); err != nil {
			return err
		}
	case *Request_JoinRoom:
		_ = b.EncodeVarint(102<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.JoinRoom); err != nil {
			return err
		}
	case *Request_RoomCreate:
		_ = b.EncodeVarint(103<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RoomCreate); err != nil {
			return err
		}
	case *Request_GetBigoData:
		_ = b.EncodeVarint(104<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetBigoData); err != nil {
			return err
		}
	case *Request_OnPlayerStateChange:
		_ = b.EncodeVarint(105<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OnPlayerStateChange); err != nil {
			return err
		}
	case *Request_OnGameStateChange:
		_ = b.EncodeVarint(106<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OnGameStateChange); err != nil {
			return err
		}
	case *Request_GameReady:
		_ = b.EncodeVarint(121<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GameReady); err != nil {
			return err
		}
	case *Request_GameData:
		_ = b.EncodeVarint(122<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GameData); err != nil {
			return err
		}
	case *Request_FrameData:
		_ = b.EncodeVarint(123<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FrameData); err != nil {
			return err
		}
	case *Request_UploadGameResult:
		_ = b.EncodeVarint(124<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UploadGameResult); err != nil {
			return err
		}
	case *Request_UpdateBigoData:
		_ = b.EncodeVarint(125<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UpdateBigoData); err != nil {
			return err
		}
	case *Request_ContinueJoinGame:
		_ = b.EncodeVarint(127<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ContinueJoinGame); err != nil {
			return err
		}
	case *Request_PreJoinGame:
		_ = b.EncodeVarint(128<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PreJoinGame); err != nil {
			return err
		}
	case *Request_RequestJoinGame:
		_ = b.EncodeVarint(129<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RequestJoinGame); err != nil {
			return err
		}
	case *Request_RespondJoinGame:
		_ = b.EncodeVarint(130<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RespondJoinGame); err != nil {
			return err
		}
	case *Request_BroadcastViewer:
		_ = b.EncodeVarint(131<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BroadcastViewer); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Request.Room has unexpected type %T", x)
	}
	// hall
	switch x := m.Hall.(type) {
	case *Request_QuickMatch:
		_ = b.EncodeVarint(200<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.QuickMatch); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Request.Hall has unexpected type %T", x)
	}
	return nil
}

func _Request_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Request)
	switch tag {
	case 5: // gate.bindService
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BindService)
		err := b.DecodeMessage(msg)
		m.Gate = &Request_BindService{msg}
		return true, err
	case 10: // gate.kickOut
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(KickOut)
		err := b.DecodeMessage(msg)
		m.Gate = &Request_KickOut{msg}
		return true, err
	case 11: // gate.pushMessage
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PushMessage)
		err := b.DecodeMessage(msg)
		m.Gate = &Request_PushMessage{msg}
		return true, err
	case 20: // passport.userRegister
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UserRegister)
		err := b.DecodeMessage(msg)
		m.Passport = &Request_UserRegister{msg}
		return true, err
	case 21: // passport.userLogin
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UserLogin)
		err := b.DecodeMessage(msg)
		m.Passport = &Request_UserLogin{msg}
		return true, err
	case 22: // passport.tokenLogin
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TokenLogin)
		err := b.DecodeMessage(msg)
		m.Passport = &Request_TokenLogin{msg}
		return true, err
	case 51: // game.loginRole
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LoginRole)
		err := b.DecodeMessage(msg)
		m.Game = &Request_LoginRole{msg}
		return true, err
	case 52: // game.changeNickname
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ChangeNickname)
		err := b.DecodeMessage(msg)
		m.Game = &Request_ChangeNickname{msg}
		return true, err
	case 100: // room.showUser
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ShowUser)
		err := b.DecodeMessage(msg)
		m.Room = &Request_ShowUser{msg}
		return true, err
	case 101: // room.getRoomInfo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetRoomInfo)
		err := b.DecodeMessage(msg)
		m.Room = &Request_GetRoomInfo{msg}
		return true, err
	case 102: // room.joinRoom
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(JoinRoom)
		err := b.DecodeMessage(msg)
		m.Room = &Request_JoinRoom{msg}
		return true, err
	case 103: // room.roomCreate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RoomCreate)
		err := b.DecodeMessage(msg)
		m.Room = &Request_RoomCreate{msg}
		return true, err
	case 104: // room.getBigoData
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetBigoData)
		err := b.DecodeMessage(msg)
		m.Room = &Request_GetBigoData{msg}
		return true, err
	case 105: // room.onPlayerStateChange
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OnPlayerStateChange)
		err := b.DecodeMessage(msg)
		m.Room = &Request_OnPlayerStateChange{msg}
		return true, err
	case 106: // room.onGameStateChange
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OnGameStateChange)
		err := b.DecodeMessage(msg)
		m.Room = &Request_OnGameStateChange{msg}
		return true, err
	case 121: // room.gameReady
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GameReady)
		err := b.DecodeMessage(msg)
		m.Room = &Request_GameReady{msg}
		return true, err
	case 122: // room.gameData
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GameData)
		err := b.DecodeMessage(msg)
		m.Room = &Request_GameData{msg}
		return true, err
	case 123: // room.frameData
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FrameData)
		err := b.DecodeMessage(msg)
		m.Room = &Request_FrameData{msg}
		return true, err
	case 124: // room.uploadGameResult
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UploadGameResult)
		err := b.DecodeMessage(msg)
		m.Room = &Request_UploadGameResult{msg}
		return true, err
	case 125: // room.updateBigoData
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UpdateBigoData)
		err := b.DecodeMessage(msg)
		m.Room = &Request_UpdateBigoData{msg}
		return true, err
	case 127: // room.continueJoinGame
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ContinueJoinGame)
		err := b.DecodeMessage(msg)
		m.Room = &Request_ContinueJoinGame{msg}
		return true, err
	case 128: // room.preJoinGame
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PreJoinGame)
		err := b.DecodeMessage(msg)
		m.Room = &Request_PreJoinGame{msg}
		return true, err
	case 129: // room.requestJoinGame
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestJoinGame)
		err := b.DecodeMessage(msg)
		m.Room = &Request_RequestJoinGame{msg}
		return true, err
	case 130: // room.respondJoinGame
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RespondJoinGame)
		err := b.DecodeMessage(msg)
		m.Room = &Request_RespondJoinGame{msg}
		return true, err
	case 131: // room.broadcastViewer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BroadcastViewer)
		err := b.DecodeMessage(msg)
		m.Room = &Request_BroadcastViewer{msg}
		return true, err
	case 200: // hall.quickMatch
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(QuickMatch)
		err := b.DecodeMessage(msg)
		m.Hall = &Request_QuickMatch{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Request_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Request)
	// gate
	switch x := m.Gate.(type) {
	case *Request_BindService:
		s := proto.Size(x.BindService)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_KickOut:
		s := proto.Size(x.KickOut)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_PushMessage:
		s := proto.Size(x.PushMessage)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// passport
	switch x := m.Passport.(type) {
	case *Request_UserRegister:
		s := proto.Size(x.UserRegister)
		n += proto.SizeVarint(20<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_UserLogin:
		s := proto.Size(x.UserLogin)
		n += proto.SizeVarint(21<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_TokenLogin:
		s := proto.Size(x.TokenLogin)
		n += proto.SizeVarint(22<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// game
	switch x := m.Game.(type) {
	case *Request_LoginRole:
		s := proto.Size(x.LoginRole)
		n += proto.SizeVarint(51<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_ChangeNickname:
		s := proto.Size(x.ChangeNickname)
		n += proto.SizeVarint(52<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// room
	switch x := m.Room.(type) {
	case *Request_ShowUser:
		s := proto.Size(x.ShowUser)
		n += proto.SizeVarint(100<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_GetRoomInfo:
		s := proto.Size(x.GetRoomInfo)
		n += proto.SizeVarint(101<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_JoinRoom:
		s := proto.Size(x.JoinRoom)
		n += proto.SizeVarint(102<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_RoomCreate:
		s := proto.Size(x.RoomCreate)
		n += proto.SizeVarint(103<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_GetBigoData:
		s := proto.Size(x.GetBigoData)
		n += proto.SizeVarint(104<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_OnPlayerStateChange:
		s := proto.Size(x.OnPlayerStateChange)
		n += proto.SizeVarint(105<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_OnGameStateChange:
		s := proto.Size(x.OnGameStateChange)
		n += proto.SizeVarint(106<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_GameReady:
		s := proto.Size(x.GameReady)
		n += proto.SizeVarint(121<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_GameData:
		s := proto.Size(x.GameData)
		n += proto.SizeVarint(122<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_FrameData:
		s := proto.Size(x.FrameData)
		n += proto.SizeVarint(123<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_UploadGameResult:
		s := proto.Size(x.UploadGameResult)
		n += proto.SizeVarint(124<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_UpdateBigoData:
		s := proto.Size(x.UpdateBigoData)
		n += proto.SizeVarint(125<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_ContinueJoinGame:
		s := proto.Size(x.ContinueJoinGame)
		n += proto.SizeVarint(127<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_PreJoinGame:
		s := proto.Size(x.PreJoinGame)
		n += proto.SizeVarint(128<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_RequestJoinGame:
		s := proto.Size(x.RequestJoinGame)
		n += proto.SizeVarint(129<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_RespondJoinGame:
		s := proto.Size(x.RespondJoinGame)
		n += proto.SizeVarint(130<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_BroadcastViewer:
		s := proto.Size(x.BroadcastViewer)
		n += proto.SizeVarint(131<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// hall
	switch x := m.Hall.(type) {
	case *Request_QuickMatch:
		s := proto.Size(x.QuickMatch)
		n += proto.SizeVarint(200<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// response
type Response struct {
	Session int32 `protobuf:"varint,1,opt,name=session,proto3" json:"session,omitempty"`
	Code    Code  `protobuf:"varint,2,opt,name=code,proto3,enum=protocol.Code" json:"code,omitempty"`
	// -----------------网关模块响应接口---------------
	//
	// Types that are valid to be assigned to Gate:
	//	*Response_BindServiceRet
	//	*Response_Kick
	Gate isResponse_Gate `protobuf_oneof:"gate"`
	// Types that are valid to be assigned to Passport:
	//	*Response_UserRegisterRet
	//	*Response_UserLoginRet
	//	*Response_TokenLoginRet
	Passport isResponse_Passport `protobuf_oneof:"passport"`
	// -----------------游戏模块接口---------------
	//
	// Types that are valid to be assigned to Game:
	//	*Response_LoginRoleRet
	//	*Response_ChangeNicknameRet
	Game isResponse_Game `protobuf_oneof:"game"`
	// Types that are valid to be assigned to Room:
	//	*Response_ShowUserRet
	//	*Response_GetRoomInfoRet
	//	*Response_JoinRoomRet
	//	*Response_RoomCreateRet
	//	*Response_GetBigoDataRet
	//	*Response_OnPlayerStateChangeRet
	//	*Response_OnGameStateChangeRet
	//	*Response_GameStartRet
	//	*Response_GameDataRet
	//	*Response_FrameDataRet
	//	*Response_LeaveRet
	//	*Response_NetworkRet
	//	*Response_VoiceRet
	//	*Response_GameResetRet
	//	*Response_PlayerLeaveRet
	//	*Response_PlayerJoinRet
	//	*Response_UpdateBigoDataRet
	//	*Response_ContinueJoinGameReq
	//	*Response_PreJoinGameReq
	//	*Response_BroadcastViewerRet
	//	*Response_EndGameRet
	Room isResponse_Room `protobuf_oneof:"room"`
	// Types that are valid to be assigned to Hall:
	//	*Response_QuickMatchRet
	Hall isResponse_Hall `protobuf_oneof:"hall"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptorProtocol, []int{1} }

type isResponse_Gate interface {
	isResponse_Gate()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isResponse_Passport interface {
	isResponse_Passport()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isResponse_Game interface {
	isResponse_Game()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isResponse_Room interface {
	isResponse_Room()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isResponse_Hall interface {
	isResponse_Hall()
	MarshalTo([]byte) (int, error)
	Size() int
}

type Response_BindServiceRet struct {
	BindServiceRet *BindServiceRet `protobuf:"bytes,5,opt,name=bindServiceRet,oneof"`
}
type Response_Kick struct {
	Kick KickType `protobuf:"varint,1005,opt,name=kick,proto3,enum=protocol.KickType,oneof"`
}
type Response_UserRegisterRet struct {
	UserRegisterRet *UserRegisterRet `protobuf:"bytes,20,opt,name=userRegisterRet,oneof"`
}
type Response_UserLoginRet struct {
	UserLoginRet *UserLoginRet `protobuf:"bytes,21,opt,name=userLoginRet,oneof"`
}
type Response_TokenLoginRet struct {
	TokenLoginRet *TokenLoginRet `protobuf:"bytes,22,opt,name=tokenLoginRet,oneof"`
}
type Response_LoginRoleRet struct {
	LoginRoleRet *LoginRoleRet `protobuf:"bytes,51,opt,name=loginRoleRet,oneof"`
}
type Response_ChangeNicknameRet struct {
	ChangeNicknameRet *ChangeNicknameRet `protobuf:"bytes,52,opt,name=changeNicknameRet,oneof"`
}
type Response_ShowUserRet struct {
	ShowUserRet *ShowUserRet `protobuf:"bytes,100,opt,name=showUserRet,oneof"`
}
type Response_GetRoomInfoRet struct {
	GetRoomInfoRet *GetRoomInfoRet `protobuf:"bytes,101,opt,name=getRoomInfoRet,oneof"`
}
type Response_JoinRoomRet struct {
	JoinRoomRet *JoinRoomRet `protobuf:"bytes,102,opt,name=joinRoomRet,oneof"`
}
type Response_RoomCreateRet struct {
	RoomCreateRet *RoomCreateRet `protobuf:"bytes,103,opt,name=roomCreateRet,oneof"`
}
type Response_GetBigoDataRet struct {
	GetBigoDataRet *GetBigoDataRet `protobuf:"bytes,104,opt,name=getBigoDataRet,oneof"`
}
type Response_OnPlayerStateChangeRet struct {
	OnPlayerStateChangeRet *OnPlayerStateChangeRet `protobuf:"bytes,105,opt,name=onPlayerStateChangeRet,oneof"`
}
type Response_OnGameStateChangeRet struct {
	OnGameStateChangeRet *OnGameStateChangeRet `protobuf:"bytes,106,opt,name=onGameStateChangeRet,oneof"`
}
type Response_GameStartRet struct {
	GameStartRet *GameStartRet `protobuf:"bytes,1101,opt,name=gameStartRet,oneof"`
}
type Response_GameDataRet struct {
	GameDataRet *GameDataRet `protobuf:"bytes,1102,opt,name=gameDataRet,oneof"`
}
type Response_FrameDataRet struct {
	FrameDataRet *FrameDataRet `protobuf:"bytes,1103,opt,name=frameDataRet,oneof"`
}
type Response_LeaveRet struct {
	LeaveRet *LeaveRet `protobuf:"bytes,1104,opt,name=leaveRet,oneof"`
}
type Response_NetworkRet struct {
	NetworkRet *NetworkRet `protobuf:"bytes,1105,opt,name=networkRet,oneof"`
}
type Response_VoiceRet struct {
	VoiceRet *VoiceRet `protobuf:"bytes,1106,opt,name=voiceRet,oneof"`
}
type Response_GameResetRet struct {
	GameResetRet *GameResetRet `protobuf:"bytes,1107,opt,name=gameResetRet,oneof"`
}
type Response_PlayerLeaveRet struct {
	PlayerLeaveRet *PlayerLeaveRet `protobuf:"bytes,1108,opt,name=playerLeaveRet,oneof"`
}
type Response_PlayerJoinRet struct {
	PlayerJoinRet *PlayerJoinRet `protobuf:"bytes,1109,opt,name=playerJoinRet,oneof"`
}
type Response_UpdateBigoDataRet struct {
	UpdateBigoDataRet *UpdateBigoDataRet `protobuf:"bytes,1110,opt,name=updateBigoDataRet,oneof"`
}
type Response_ContinueJoinGameReq struct {
	ContinueJoinGameReq *ContinueJoinGameReq `protobuf:"bytes,1111,opt,name=continueJoinGameReq,oneof"`
}
type Response_PreJoinGameReq struct {
	PreJoinGameReq *PreJoinGameReq `protobuf:"bytes,1112,opt,name=preJoinGameReq,oneof"`
}
type Response_BroadcastViewerRet struct {
	BroadcastViewerRet *BroadcastViewerRet `protobuf:"bytes,1113,opt,name=broadcastViewerRet,oneof"`
}
type Response_EndGameRet struct {
	EndGameRet *EndGameRet `protobuf:"bytes,1114,opt,name=endGameRet,oneof"`
}
type Response_QuickMatchRet struct {
	QuickMatchRet *QuickMatchRet `protobuf:"bytes,1200,opt,name=quickMatchRet,oneof"`
}

func (*Response_BindServiceRet) isResponse_Gate()         {}
func (*Response_Kick) isResponse_Gate()                   {}
func (*Response_UserRegisterRet) isResponse_Passport()    {}
func (*Response_UserLoginRet) isResponse_Passport()       {}
func (*Response_TokenLoginRet) isResponse_Passport()      {}
func (*Response_LoginRoleRet) isResponse_Game()           {}
func (*Response_ChangeNicknameRet) isResponse_Game()      {}
func (*Response_ShowUserRet) isResponse_Room()            {}
func (*Response_GetRoomInfoRet) isResponse_Room()         {}
func (*Response_JoinRoomRet) isResponse_Room()            {}
func (*Response_RoomCreateRet) isResponse_Room()          {}
func (*Response_GetBigoDataRet) isResponse_Room()         {}
func (*Response_OnPlayerStateChangeRet) isResponse_Room() {}
func (*Response_OnGameStateChangeRet) isResponse_Room()   {}
func (*Response_GameStartRet) isResponse_Room()           {}
func (*Response_GameDataRet) isResponse_Room()            {}
func (*Response_FrameDataRet) isResponse_Room()           {}
func (*Response_LeaveRet) isResponse_Room()               {}
func (*Response_NetworkRet) isResponse_Room()             {}
func (*Response_VoiceRet) isResponse_Room()               {}
func (*Response_GameResetRet) isResponse_Room()           {}
func (*Response_PlayerLeaveRet) isResponse_Room()         {}
func (*Response_PlayerJoinRet) isResponse_Room()          {}
func (*Response_UpdateBigoDataRet) isResponse_Room()      {}
func (*Response_ContinueJoinGameReq) isResponse_Room()    {}
func (*Response_PreJoinGameReq) isResponse_Room()         {}
func (*Response_BroadcastViewerRet) isResponse_Room()     {}
func (*Response_EndGameRet) isResponse_Room()             {}
func (*Response_QuickMatchRet) isResponse_Hall()          {}

func (m *Response) GetGate() isResponse_Gate {
	if m != nil {
		return m.Gate
	}
	return nil
}
func (m *Response) GetPassport() isResponse_Passport {
	if m != nil {
		return m.Passport
	}
	return nil
}
func (m *Response) GetGame() isResponse_Game {
	if m != nil {
		return m.Game
	}
	return nil
}
func (m *Response) GetRoom() isResponse_Room {
	if m != nil {
		return m.Room
	}
	return nil
}
func (m *Response) GetHall() isResponse_Hall {
	if m != nil {
		return m.Hall
	}
	return nil
}

func (m *Response) GetSession() int32 {
	if m != nil {
		return m.Session
	}
	return 0
}

func (m *Response) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_Success
}

func (m *Response) GetBindServiceRet() *BindServiceRet {
	if x, ok := m.GetGate().(*Response_BindServiceRet); ok {
		return x.BindServiceRet
	}
	return nil
}

func (m *Response) GetKick() KickType {
	if x, ok := m.GetGate().(*Response_Kick); ok {
		return x.Kick
	}
	return KickType_None
}

func (m *Response) GetUserRegisterRet() *UserRegisterRet {
	if x, ok := m.GetPassport().(*Response_UserRegisterRet); ok {
		return x.UserRegisterRet
	}
	return nil
}

func (m *Response) GetUserLoginRet() *UserLoginRet {
	if x, ok := m.GetPassport().(*Response_UserLoginRet); ok {
		return x.UserLoginRet
	}
	return nil
}

func (m *Response) GetTokenLoginRet() *TokenLoginRet {
	if x, ok := m.GetPassport().(*Response_TokenLoginRet); ok {
		return x.TokenLoginRet
	}
	return nil
}

func (m *Response) GetLoginRoleRet() *LoginRoleRet {
	if x, ok := m.GetGame().(*Response_LoginRoleRet); ok {
		return x.LoginRoleRet
	}
	return nil
}

func (m *Response) GetChangeNicknameRet() *ChangeNicknameRet {
	if x, ok := m.GetGame().(*Response_ChangeNicknameRet); ok {
		return x.ChangeNicknameRet
	}
	return nil
}

func (m *Response) GetShowUserRet() *ShowUserRet {
	if x, ok := m.GetRoom().(*Response_ShowUserRet); ok {
		return x.ShowUserRet
	}
	return nil
}

func (m *Response) GetGetRoomInfoRet() *GetRoomInfoRet {
	if x, ok := m.GetRoom().(*Response_GetRoomInfoRet); ok {
		return x.GetRoomInfoRet
	}
	return nil
}

func (m *Response) GetJoinRoomRet() *JoinRoomRet {
	if x, ok := m.GetRoom().(*Response_JoinRoomRet); ok {
		return x.JoinRoomRet
	}
	return nil
}

func (m *Response) GetRoomCreateRet() *RoomCreateRet {
	if x, ok := m.GetRoom().(*Response_RoomCreateRet); ok {
		return x.RoomCreateRet
	}
	return nil
}

func (m *Response) GetGetBigoDataRet() *GetBigoDataRet {
	if x, ok := m.GetRoom().(*Response_GetBigoDataRet); ok {
		return x.GetBigoDataRet
	}
	return nil
}

func (m *Response) GetOnPlayerStateChangeRet() *OnPlayerStateChangeRet {
	if x, ok := m.GetRoom().(*Response_OnPlayerStateChangeRet); ok {
		return x.OnPlayerStateChangeRet
	}
	return nil
}

func (m *Response) GetOnGameStateChangeRet() *OnGameStateChangeRet {
	if x, ok := m.GetRoom().(*Response_OnGameStateChangeRet); ok {
		return x.OnGameStateChangeRet
	}
	return nil
}

func (m *Response) GetGameStartRet() *GameStartRet {
	if x, ok := m.GetRoom().(*Response_GameStartRet); ok {
		return x.GameStartRet
	}
	return nil
}

func (m *Response) GetGameDataRet() *GameDataRet {
	if x, ok := m.GetRoom().(*Response_GameDataRet); ok {
		return x.GameDataRet
	}
	return nil
}

func (m *Response) GetFrameDataRet() *FrameDataRet {
	if x, ok := m.GetRoom().(*Response_FrameDataRet); ok {
		return x.FrameDataRet
	}
	return nil
}

func (m *Response) GetLeaveRet() *LeaveRet {
	if x, ok := m.GetRoom().(*Response_LeaveRet); ok {
		return x.LeaveRet
	}
	return nil
}

func (m *Response) GetNetworkRet() *NetworkRet {
	if x, ok := m.GetRoom().(*Response_NetworkRet); ok {
		return x.NetworkRet
	}
	return nil
}

func (m *Response) GetVoiceRet() *VoiceRet {
	if x, ok := m.GetRoom().(*Response_VoiceRet); ok {
		return x.VoiceRet
	}
	return nil
}

func (m *Response) GetGameResetRet() *GameResetRet {
	if x, ok := m.GetRoom().(*Response_GameResetRet); ok {
		return x.GameResetRet
	}
	return nil
}

func (m *Response) GetPlayerLeaveRet() *PlayerLeaveRet {
	if x, ok := m.GetRoom().(*Response_PlayerLeaveRet); ok {
		return x.PlayerLeaveRet
	}
	return nil
}

func (m *Response) GetPlayerJoinRet() *PlayerJoinRet {
	if x, ok := m.GetRoom().(*Response_PlayerJoinRet); ok {
		return x.PlayerJoinRet
	}
	return nil
}

func (m *Response) GetUpdateBigoDataRet() *UpdateBigoDataRet {
	if x, ok := m.GetRoom().(*Response_UpdateBigoDataRet); ok {
		return x.UpdateBigoDataRet
	}
	return nil
}

func (m *Response) GetContinueJoinGameReq() *ContinueJoinGameReq {
	if x, ok := m.GetRoom().(*Response_ContinueJoinGameReq); ok {
		return x.ContinueJoinGameReq
	}
	return nil
}

func (m *Response) GetPreJoinGameReq() *PreJoinGameReq {
	if x, ok := m.GetRoom().(*Response_PreJoinGameReq); ok {
		return x.PreJoinGameReq
	}
	return nil
}

func (m *Response) GetBroadcastViewerRet() *BroadcastViewerRet {
	if x, ok := m.GetRoom().(*Response_BroadcastViewerRet); ok {
		return x.BroadcastViewerRet
	}
	return nil
}

func (m *Response) GetEndGameRet() *EndGameRet {
	if x, ok := m.GetRoom().(*Response_EndGameRet); ok {
		return x.EndGameRet
	}
	return nil
}

func (m *Response) GetQuickMatchRet() *QuickMatchRet {
	if x, ok := m.GetHall().(*Response_QuickMatchRet); ok {
		return x.QuickMatchRet
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Response) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Response_OneofMarshaler, _Response_OneofUnmarshaler, _Response_OneofSizer, []interface{}{
		(*Response_BindServiceRet)(nil),
		(*Response_Kick)(nil),
		(*Response_UserRegisterRet)(nil),
		(*Response_UserLoginRet)(nil),
		(*Response_TokenLoginRet)(nil),
		(*Response_LoginRoleRet)(nil),
		(*Response_ChangeNicknameRet)(nil),
		(*Response_ShowUserRet)(nil),
		(*Response_GetRoomInfoRet)(nil),
		(*Response_JoinRoomRet)(nil),
		(*Response_RoomCreateRet)(nil),
		(*Response_GetBigoDataRet)(nil),
		(*Response_OnPlayerStateChangeRet)(nil),
		(*Response_OnGameStateChangeRet)(nil),
		(*Response_GameStartRet)(nil),
		(*Response_GameDataRet)(nil),
		(*Response_FrameDataRet)(nil),
		(*Response_LeaveRet)(nil),
		(*Response_NetworkRet)(nil),
		(*Response_VoiceRet)(nil),
		(*Response_GameResetRet)(nil),
		(*Response_PlayerLeaveRet)(nil),
		(*Response_PlayerJoinRet)(nil),
		(*Response_UpdateBigoDataRet)(nil),
		(*Response_ContinueJoinGameReq)(nil),
		(*Response_PreJoinGameReq)(nil),
		(*Response_BroadcastViewerRet)(nil),
		(*Response_EndGameRet)(nil),
		(*Response_QuickMatchRet)(nil),
	}
}

func _Response_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Response)
	// gate
	switch x := m.Gate.(type) {
	case *Response_BindServiceRet:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BindServiceRet); err != nil {
			return err
		}
	case *Response_Kick:
		_ = b.EncodeVarint(1005<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Kick))
	case nil:
	default:
		return fmt.Errorf("Response.Gate has unexpected type %T", x)
	}
	// passport
	switch x := m.Passport.(type) {
	case *Response_UserRegisterRet:
		_ = b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserRegisterRet); err != nil {
			return err
		}
	case *Response_UserLoginRet:
		_ = b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UserLoginRet); err != nil {
			return err
		}
	case *Response_TokenLoginRet:
		_ = b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TokenLoginRet); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Response.Passport has unexpected type %T", x)
	}
	// game
	switch x := m.Game.(type) {
	case *Response_LoginRoleRet:
		_ = b.EncodeVarint(51<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LoginRoleRet); err != nil {
			return err
		}
	case *Response_ChangeNicknameRet:
		_ = b.EncodeVarint(52<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ChangeNicknameRet); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Response.Game has unexpected type %T", x)
	}
	// room
	switch x := m.Room.(type) {
	case *Response_ShowUserRet:
		_ = b.EncodeVarint(100<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ShowUserRet); err != nil {
			return err
		}
	case *Response_GetRoomInfoRet:
		_ = b.EncodeVarint(101<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetRoomInfoRet); err != nil {
			return err
		}
	case *Response_JoinRoomRet:
		_ = b.EncodeVarint(102<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.JoinRoomRet); err != nil {
			return err
		}
	case *Response_RoomCreateRet:
		_ = b.EncodeVarint(103<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RoomCreateRet); err != nil {
			return err
		}
	case *Response_GetBigoDataRet:
		_ = b.EncodeVarint(104<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetBigoDataRet); err != nil {
			return err
		}
	case *Response_OnPlayerStateChangeRet:
		_ = b.EncodeVarint(105<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OnPlayerStateChangeRet); err != nil {
			return err
		}
	case *Response_OnGameStateChangeRet:
		_ = b.EncodeVarint(106<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OnGameStateChangeRet); err != nil {
			return err
		}
	case *Response_GameStartRet:
		_ = b.EncodeVarint(1101<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GameStartRet); err != nil {
			return err
		}
	case *Response_GameDataRet:
		_ = b.EncodeVarint(1102<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GameDataRet); err != nil {
			return err
		}
	case *Response_FrameDataRet:
		_ = b.EncodeVarint(1103<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FrameDataRet); err != nil {
			return err
		}
	case *Response_LeaveRet:
		_ = b.EncodeVarint(1104<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LeaveRet); err != nil {
			return err
		}
	case *Response_NetworkRet:
		_ = b.EncodeVarint(1105<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NetworkRet); err != nil {
			return err
		}
	case *Response_VoiceRet:
		_ = b.EncodeVarint(1106<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.VoiceRet); err != nil {
			return err
		}
	case *Response_GameResetRet:
		_ = b.EncodeVarint(1107<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GameResetRet); err != nil {
			return err
		}
	case *Response_PlayerLeaveRet:
		_ = b.EncodeVarint(1108<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PlayerLeaveRet); err != nil {
			return err
		}
	case *Response_PlayerJoinRet:
		_ = b.EncodeVarint(1109<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PlayerJoinRet); err != nil {
			return err
		}
	case *Response_UpdateBigoDataRet:
		_ = b.EncodeVarint(1110<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UpdateBigoDataRet); err != nil {
			return err
		}
	case *Response_ContinueJoinGameReq:
		_ = b.EncodeVarint(1111<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ContinueJoinGameReq); err != nil {
			return err
		}
	case *Response_PreJoinGameReq:
		_ = b.EncodeVarint(1112<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PreJoinGameReq); err != nil {
			return err
		}
	case *Response_BroadcastViewerRet:
		_ = b.EncodeVarint(1113<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BroadcastViewerRet); err != nil {
			return err
		}
	case *Response_EndGameRet:
		_ = b.EncodeVarint(1114<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EndGameRet); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Response.Room has unexpected type %T", x)
	}
	// hall
	switch x := m.Hall.(type) {
	case *Response_QuickMatchRet:
		_ = b.EncodeVarint(1200<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.QuickMatchRet); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Response.Hall has unexpected type %T", x)
	}
	return nil
}

func _Response_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Response)
	switch tag {
	case 5: // gate.bindServiceRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BindServiceRet)
		err := b.DecodeMessage(msg)
		m.Gate = &Response_BindServiceRet{msg}
		return true, err
	case 1005: // gate.kick
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Gate = &Response_Kick{KickType(x)}
		return true, err
	case 20: // passport.userRegisterRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UserRegisterRet)
		err := b.DecodeMessage(msg)
		m.Passport = &Response_UserRegisterRet{msg}
		return true, err
	case 21: // passport.userLoginRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UserLoginRet)
		err := b.DecodeMessage(msg)
		m.Passport = &Response_UserLoginRet{msg}
		return true, err
	case 22: // passport.tokenLoginRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TokenLoginRet)
		err := b.DecodeMessage(msg)
		m.Passport = &Response_TokenLoginRet{msg}
		return true, err
	case 51: // game.loginRoleRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LoginRoleRet)
		err := b.DecodeMessage(msg)
		m.Game = &Response_LoginRoleRet{msg}
		return true, err
	case 52: // game.changeNicknameRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ChangeNicknameRet)
		err := b.DecodeMessage(msg)
		m.Game = &Response_ChangeNicknameRet{msg}
		return true, err
	case 100: // room.showUserRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ShowUserRet)
		err := b.DecodeMessage(msg)
		m.Room = &Response_ShowUserRet{msg}
		return true, err
	case 101: // room.getRoomInfoRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetRoomInfoRet)
		err := b.DecodeMessage(msg)
		m.Room = &Response_GetRoomInfoRet{msg}
		return true, err
	case 102: // room.joinRoomRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(JoinRoomRet)
		err := b.DecodeMessage(msg)
		m.Room = &Response_JoinRoomRet{msg}
		return true, err
	case 103: // room.roomCreateRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RoomCreateRet)
		err := b.DecodeMessage(msg)
		m.Room = &Response_RoomCreateRet{msg}
		return true, err
	case 104: // room.getBigoDataRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetBigoDataRet)
		err := b.DecodeMessage(msg)
		m.Room = &Response_GetBigoDataRet{msg}
		return true, err
	case 105: // room.onPlayerStateChangeRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OnPlayerStateChangeRet)
		err := b.DecodeMessage(msg)
		m.Room = &Response_OnPlayerStateChangeRet{msg}
		return true, err
	case 106: // room.onGameStateChangeRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OnGameStateChangeRet)
		err := b.DecodeMessage(msg)
		m.Room = &Response_OnGameStateChangeRet{msg}
		return true, err
	case 1101: // room.gameStartRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GameStartRet)
		err := b.DecodeMessage(msg)
		m.Room = &Response_GameStartRet{msg}
		return true, err
	case 1102: // room.gameDataRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GameDataRet)
		err := b.DecodeMessage(msg)
		m.Room = &Response_GameDataRet{msg}
		return true, err
	case 1103: // room.frameDataRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FrameDataRet)
		err := b.DecodeMessage(msg)
		m.Room = &Response_FrameDataRet{msg}
		return true, err
	case 1104: // room.leaveRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LeaveRet)
		err := b.DecodeMessage(msg)
		m.Room = &Response_LeaveRet{msg}
		return true, err
	case 1105: // room.networkRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NetworkRet)
		err := b.DecodeMessage(msg)
		m.Room = &Response_NetworkRet{msg}
		return true, err
	case 1106: // room.voiceRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VoiceRet)
		err := b.DecodeMessage(msg)
		m.Room = &Response_VoiceRet{msg}
		return true, err
	case 1107: // room.gameResetRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GameResetRet)
		err := b.DecodeMessage(msg)
		m.Room = &Response_GameResetRet{msg}
		return true, err
	case 1108: // room.playerLeaveRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlayerLeaveRet)
		err := b.DecodeMessage(msg)
		m.Room = &Response_PlayerLeaveRet{msg}
		return true, err
	case 1109: // room.playerJoinRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlayerJoinRet)
		err := b.DecodeMessage(msg)
		m.Room = &Response_PlayerJoinRet{msg}
		return true, err
	case 1110: // room.updateBigoDataRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UpdateBigoDataRet)
		err := b.DecodeMessage(msg)
		m.Room = &Response_UpdateBigoDataRet{msg}
		return true, err
	case 1111: // room.continueJoinGameReq
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ContinueJoinGameReq)
		err := b.DecodeMessage(msg)
		m.Room = &Response_ContinueJoinGameReq{msg}
		return true, err
	case 1112: // room.preJoinGameReq
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PreJoinGameReq)
		err := b.DecodeMessage(msg)
		m.Room = &Response_PreJoinGameReq{msg}
		return true, err
	case 1113: // room.broadcastViewerRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BroadcastViewerRet)
		err := b.DecodeMessage(msg)
		m.Room = &Response_BroadcastViewerRet{msg}
		return true, err
	case 1114: // room.endGameRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EndGameRet)
		err := b.DecodeMessage(msg)
		m.Room = &Response_EndGameRet{msg}
		return true, err
	case 1200: // hall.quickMatchRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(QuickMatchRet)
		err := b.DecodeMessage(msg)
		m.Hall = &Response_QuickMatchRet{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Response_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Response)
	// gate
	switch x := m.Gate.(type) {
	case *Response_BindServiceRet:
		s := proto.Size(x.BindServiceRet)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Kick:
		n += proto.SizeVarint(1005<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Kick))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// passport
	switch x := m.Passport.(type) {
	case *Response_UserRegisterRet:
		s := proto.Size(x.UserRegisterRet)
		n += proto.SizeVarint(20<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_UserLoginRet:
		s := proto.Size(x.UserLoginRet)
		n += proto.SizeVarint(21<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_TokenLoginRet:
		s := proto.Size(x.TokenLoginRet)
		n += proto.SizeVarint(22<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// game
	switch x := m.Game.(type) {
	case *Response_LoginRoleRet:
		s := proto.Size(x.LoginRoleRet)
		n += proto.SizeVarint(51<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_ChangeNicknameRet:
		s := proto.Size(x.ChangeNicknameRet)
		n += proto.SizeVarint(52<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// room
	switch x := m.Room.(type) {
	case *Response_ShowUserRet:
		s := proto.Size(x.ShowUserRet)
		n += proto.SizeVarint(100<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_GetRoomInfoRet:
		s := proto.Size(x.GetRoomInfoRet)
		n += proto.SizeVarint(101<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_JoinRoomRet:
		s := proto.Size(x.JoinRoomRet)
		n += proto.SizeVarint(102<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_RoomCreateRet:
		s := proto.Size(x.RoomCreateRet)
		n += proto.SizeVarint(103<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_GetBigoDataRet:
		s := proto.Size(x.GetBigoDataRet)
		n += proto.SizeVarint(104<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_OnPlayerStateChangeRet:
		s := proto.Size(x.OnPlayerStateChangeRet)
		n += proto.SizeVarint(105<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_OnGameStateChangeRet:
		s := proto.Size(x.OnGameStateChangeRet)
		n += proto.SizeVarint(106<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_GameStartRet:
		s := proto.Size(x.GameStartRet)
		n += proto.SizeVarint(1101<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_GameDataRet:
		s := proto.Size(x.GameDataRet)
		n += proto.SizeVarint(1102<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_FrameDataRet:
		s := proto.Size(x.FrameDataRet)
		n += proto.SizeVarint(1103<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_LeaveRet:
		s := proto.Size(x.LeaveRet)
		n += proto.SizeVarint(1104<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_NetworkRet:
		s := proto.Size(x.NetworkRet)
		n += proto.SizeVarint(1105<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_VoiceRet:
		s := proto.Size(x.VoiceRet)
		n += proto.SizeVarint(1106<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_GameResetRet:
		s := proto.Size(x.GameResetRet)
		n += proto.SizeVarint(1107<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_PlayerLeaveRet:
		s := proto.Size(x.PlayerLeaveRet)
		n += proto.SizeVarint(1108<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_PlayerJoinRet:
		s := proto.Size(x.PlayerJoinRet)
		n += proto.SizeVarint(1109<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_UpdateBigoDataRet:
		s := proto.Size(x.UpdateBigoDataRet)
		n += proto.SizeVarint(1110<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_ContinueJoinGameReq:
		s := proto.Size(x.ContinueJoinGameReq)
		n += proto.SizeVarint(1111<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_PreJoinGameReq:
		s := proto.Size(x.PreJoinGameReq)
		n += proto.SizeVarint(1112<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_BroadcastViewerRet:
		s := proto.Size(x.BroadcastViewerRet)
		n += proto.SizeVarint(1113<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_EndGameRet:
		s := proto.Size(x.EndGameRet)
		n += proto.SizeVarint(1114<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// hall
	switch x := m.Hall.(type) {
	case *Response_QuickMatchRet:
		s := proto.Size(x.QuickMatchRet)
		n += proto.SizeVarint(1200<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Request)(nil), "protocol.Request")
	proto.RegisterType((*Response)(nil), "protocol.Response")
}
func (m *Request) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Request) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Session != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.Session))
	}
	if m.Gate != nil {
		nn1, err := m.Gate.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn1
	}
	if m.Passport != nil {
		nn2, err := m.Passport.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn2
	}
	if m.Game != nil {
		nn3, err := m.Game.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn3
	}
	if m.Room != nil {
		nn4, err := m.Room.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn4
	}
	if m.Hall != nil {
		nn5, err := m.Hall.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn5
	}
	return i, nil
}

func (m *Request_BindService) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.BindService != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.BindService.Size()))
		n6, err := m.BindService.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n6
	}
	return i, nil
}
func (m *Request_KickOut) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.KickOut != nil {
		dAtA[i] = 0x52
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.KickOut.Size()))
		n7, err := m.KickOut.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n7
	}
	return i, nil
}
func (m *Request_PushMessage) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.PushMessage != nil {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.PushMessage.Size()))
		n8, err := m.PushMessage.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n8
	}
	return i, nil
}
func (m *Request_UserRegister) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UserRegister != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.UserRegister.Size()))
		n9, err := m.UserRegister.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n9
	}
	return i, nil
}
func (m *Request_UserLogin) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UserLogin != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.UserLogin.Size()))
		n10, err := m.UserLogin.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n10
	}
	return i, nil
}
func (m *Request_TokenLogin) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.TokenLogin != nil {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.TokenLogin.Size()))
		n11, err := m.TokenLogin.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n11
	}
	return i, nil
}
func (m *Request_LoginRole) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.LoginRole != nil {
		dAtA[i] = 0x9a
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.LoginRole.Size()))
		n12, err := m.LoginRole.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n12
	}
	return i, nil
}
func (m *Request_ChangeNickname) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ChangeNickname != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.ChangeNickname.Size()))
		n13, err := m.ChangeNickname.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n13
	}
	return i, nil
}
func (m *Request_ShowUser) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ShowUser != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.ShowUser.Size()))
		n14, err := m.ShowUser.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n14
	}
	return i, nil
}
func (m *Request_GetRoomInfo) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.GetRoomInfo != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.GetRoomInfo.Size()))
		n15, err := m.GetRoomInfo.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n15
	}
	return i, nil
}
func (m *Request_JoinRoom) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.JoinRoom != nil {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.JoinRoom.Size()))
		n16, err := m.JoinRoom.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n16
	}
	return i, nil
}
func (m *Request_RoomCreate) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.RoomCreate != nil {
		dAtA[i] = 0xba
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.RoomCreate.Size()))
		n17, err := m.RoomCreate.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n17
	}
	return i, nil
}
func (m *Request_GetBigoData) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.GetBigoData != nil {
		dAtA[i] = 0xc2
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.GetBigoData.Size()))
		n18, err := m.GetBigoData.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n18
	}
	return i, nil
}
func (m *Request_OnPlayerStateChange) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.OnPlayerStateChange != nil {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.OnPlayerStateChange.Size()))
		n19, err := m.OnPlayerStateChange.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n19
	}
	return i, nil
}
func (m *Request_OnGameStateChange) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.OnGameStateChange != nil {
		dAtA[i] = 0xd2
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.OnGameStateChange.Size()))
		n20, err := m.OnGameStateChange.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n20
	}
	return i, nil
}
func (m *Request_GameReady) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.GameReady != nil {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.GameReady.Size()))
		n21, err := m.GameReady.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n21
	}
	return i, nil
}
func (m *Request_GameData) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.GameData != nil {
		dAtA[i] = 0xd2
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.GameData.Size()))
		n22, err := m.GameData.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n22
	}
	return i, nil
}
func (m *Request_FrameData) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.FrameData != nil {
		dAtA[i] = 0xda
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.FrameData.Size()))
		n23, err := m.FrameData.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n23
	}
	return i, nil
}
func (m *Request_UploadGameResult) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UploadGameResult != nil {
		dAtA[i] = 0xe2
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.UploadGameResult.Size()))
		n24, err := m.UploadGameResult.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n24
	}
	return i, nil
}
func (m *Request_UpdateBigoData) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UpdateBigoData != nil {
		dAtA[i] = 0xea
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.UpdateBigoData.Size()))
		n25, err := m.UpdateBigoData.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n25
	}
	return i, nil
}
func (m *Request_ContinueJoinGame) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ContinueJoinGame != nil {
		dAtA[i] = 0xfa
		i++
		dAtA[i] = 0x7
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.ContinueJoinGame.Size()))
		n26, err := m.ContinueJoinGame.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n26
	}
	return i, nil
}
func (m *Request_PreJoinGame) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.PreJoinGame != nil {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x8
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.PreJoinGame.Size()))
		n27, err := m.PreJoinGame.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n27
	}
	return i, nil
}
func (m *Request_RequestJoinGame) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.RequestJoinGame != nil {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x8
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.RequestJoinGame.Size()))
		n28, err := m.RequestJoinGame.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n28
	}
	return i, nil
}
func (m *Request_RespondJoinGame) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.RespondJoinGame != nil {
		dAtA[i] = 0x92
		i++
		dAtA[i] = 0x8
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.RespondJoinGame.Size()))
		n29, err := m.RespondJoinGame.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n29
	}
	return i, nil
}
func (m *Request_BroadcastViewer) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.BroadcastViewer != nil {
		dAtA[i] = 0x9a
		i++
		dAtA[i] = 0x8
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.BroadcastViewer.Size()))
		n30, err := m.BroadcastViewer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n30
	}
	return i, nil
}
func (m *Request_QuickMatch) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.QuickMatch != nil {
		dAtA[i] = 0xc2
		i++
		dAtA[i] = 0xc
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.QuickMatch.Size()))
		n31, err := m.QuickMatch.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n31
	}
	return i, nil
}
func (m *Response) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Response) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Session != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.Session))
	}
	if m.Code != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.Code))
	}
	if m.Gate != nil {
		nn32, err := m.Gate.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn32
	}
	if m.Passport != nil {
		nn33, err := m.Passport.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn33
	}
	if m.Game != nil {
		nn34, err := m.Game.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn34
	}
	if m.Room != nil {
		nn35, err := m.Room.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn35
	}
	if m.Hall != nil {
		nn36, err := m.Hall.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn36
	}
	return i, nil
}

func (m *Response_BindServiceRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.BindServiceRet != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.BindServiceRet.Size()))
		n37, err := m.BindServiceRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n37
	}
	return i, nil
}
func (m *Response_UserRegisterRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UserRegisterRet != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.UserRegisterRet.Size()))
		n38, err := m.UserRegisterRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n38
	}
	return i, nil
}
func (m *Response_UserLoginRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UserLoginRet != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.UserLoginRet.Size()))
		n39, err := m.UserLoginRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n39
	}
	return i, nil
}
func (m *Response_TokenLoginRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.TokenLoginRet != nil {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.TokenLoginRet.Size()))
		n40, err := m.TokenLoginRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n40
	}
	return i, nil
}
func (m *Response_LoginRoleRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.LoginRoleRet != nil {
		dAtA[i] = 0x9a
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.LoginRoleRet.Size()))
		n41, err := m.LoginRoleRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n41
	}
	return i, nil
}
func (m *Response_ChangeNicknameRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ChangeNicknameRet != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.ChangeNicknameRet.Size()))
		n42, err := m.ChangeNicknameRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n42
	}
	return i, nil
}
func (m *Response_ShowUserRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ShowUserRet != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.ShowUserRet.Size()))
		n43, err := m.ShowUserRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n43
	}
	return i, nil
}
func (m *Response_GetRoomInfoRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.GetRoomInfoRet != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.GetRoomInfoRet.Size()))
		n44, err := m.GetRoomInfoRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n44
	}
	return i, nil
}
func (m *Response_JoinRoomRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.JoinRoomRet != nil {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.JoinRoomRet.Size()))
		n45, err := m.JoinRoomRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n45
	}
	return i, nil
}
func (m *Response_RoomCreateRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.RoomCreateRet != nil {
		dAtA[i] = 0xba
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.RoomCreateRet.Size()))
		n46, err := m.RoomCreateRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n46
	}
	return i, nil
}
func (m *Response_GetBigoDataRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.GetBigoDataRet != nil {
		dAtA[i] = 0xc2
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.GetBigoDataRet.Size()))
		n47, err := m.GetBigoDataRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n47
	}
	return i, nil
}
func (m *Response_OnPlayerStateChangeRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.OnPlayerStateChangeRet != nil {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.OnPlayerStateChangeRet.Size()))
		n48, err := m.OnPlayerStateChangeRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n48
	}
	return i, nil
}
func (m *Response_OnGameStateChangeRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.OnGameStateChangeRet != nil {
		dAtA[i] = 0xd2
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.OnGameStateChangeRet.Size()))
		n49, err := m.OnGameStateChangeRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n49
	}
	return i, nil
}
func (m *Response_Kick) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0xe8
	i++
	dAtA[i] = 0x3e
	i++
	i = encodeVarintProtocol(dAtA, i, uint64(m.Kick))
	return i, nil
}
func (m *Response_GameStartRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.GameStartRet != nil {
		dAtA[i] = 0xea
		i++
		dAtA[i] = 0x44
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.GameStartRet.Size()))
		n50, err := m.GameStartRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n50
	}
	return i, nil
}
func (m *Response_GameDataRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.GameDataRet != nil {
		dAtA[i] = 0xf2
		i++
		dAtA[i] = 0x44
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.GameDataRet.Size()))
		n51, err := m.GameDataRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n51
	}
	return i, nil
}
func (m *Response_FrameDataRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.FrameDataRet != nil {
		dAtA[i] = 0xfa
		i++
		dAtA[i] = 0x44
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.FrameDataRet.Size()))
		n52, err := m.FrameDataRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n52
	}
	return i, nil
}
func (m *Response_LeaveRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.LeaveRet != nil {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x45
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.LeaveRet.Size()))
		n53, err := m.LeaveRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n53
	}
	return i, nil
}
func (m *Response_NetworkRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.NetworkRet != nil {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x45
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.NetworkRet.Size()))
		n54, err := m.NetworkRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n54
	}
	return i, nil
}
func (m *Response_VoiceRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.VoiceRet != nil {
		dAtA[i] = 0x92
		i++
		dAtA[i] = 0x45
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.VoiceRet.Size()))
		n55, err := m.VoiceRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n55
	}
	return i, nil
}
func (m *Response_GameResetRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.GameResetRet != nil {
		dAtA[i] = 0x9a
		i++
		dAtA[i] = 0x45
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.GameResetRet.Size()))
		n56, err := m.GameResetRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n56
	}
	return i, nil
}
func (m *Response_PlayerLeaveRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.PlayerLeaveRet != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x45
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.PlayerLeaveRet.Size()))
		n57, err := m.PlayerLeaveRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n57
	}
	return i, nil
}
func (m *Response_PlayerJoinRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.PlayerJoinRet != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x45
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.PlayerJoinRet.Size()))
		n58, err := m.PlayerJoinRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n58
	}
	return i, nil
}
func (m *Response_UpdateBigoDataRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.UpdateBigoDataRet != nil {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x45
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.UpdateBigoDataRet.Size()))
		n59, err := m.UpdateBigoDataRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n59
	}
	return i, nil
}
func (m *Response_ContinueJoinGameReq) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.ContinueJoinGameReq != nil {
		dAtA[i] = 0xba
		i++
		dAtA[i] = 0x45
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.ContinueJoinGameReq.Size()))
		n60, err := m.ContinueJoinGameReq.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n60
	}
	return i, nil
}
func (m *Response_PreJoinGameReq) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.PreJoinGameReq != nil {
		dAtA[i] = 0xc2
		i++
		dAtA[i] = 0x45
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.PreJoinGameReq.Size()))
		n61, err := m.PreJoinGameReq.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n61
	}
	return i, nil
}
func (m *Response_BroadcastViewerRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.BroadcastViewerRet != nil {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x45
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.BroadcastViewerRet.Size()))
		n62, err := m.BroadcastViewerRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n62
	}
	return i, nil
}
func (m *Response_EndGameRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.EndGameRet != nil {
		dAtA[i] = 0xd2
		i++
		dAtA[i] = 0x45
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.EndGameRet.Size()))
		n63, err := m.EndGameRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n63
	}
	return i, nil
}
func (m *Response_QuickMatchRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.QuickMatchRet != nil {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x4b
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.QuickMatchRet.Size()))
		n64, err := m.QuickMatchRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n64
	}
	return i, nil
}
func encodeVarintProtocol(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *Request) Size() (n int) {
	var l int
	_ = l
	if m.Session != 0 {
		n += 1 + sovProtocol(uint64(m.Session))
	}
	if m.Gate != nil {
		n += m.Gate.Size()
	}
	if m.Passport != nil {
		n += m.Passport.Size()
	}
	if m.Game != nil {
		n += m.Game.Size()
	}
	if m.Room != nil {
		n += m.Room.Size()
	}
	if m.Hall != nil {
		n += m.Hall.Size()
	}
	return n
}

func (m *Request_BindService) Size() (n int) {
	var l int
	_ = l
	if m.BindService != nil {
		l = m.BindService.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_KickOut) Size() (n int) {
	var l int
	_ = l
	if m.KickOut != nil {
		l = m.KickOut.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_PushMessage) Size() (n int) {
	var l int
	_ = l
	if m.PushMessage != nil {
		l = m.PushMessage.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_UserRegister) Size() (n int) {
	var l int
	_ = l
	if m.UserRegister != nil {
		l = m.UserRegister.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_UserLogin) Size() (n int) {
	var l int
	_ = l
	if m.UserLogin != nil {
		l = m.UserLogin.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_TokenLogin) Size() (n int) {
	var l int
	_ = l
	if m.TokenLogin != nil {
		l = m.TokenLogin.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_LoginRole) Size() (n int) {
	var l int
	_ = l
	if m.LoginRole != nil {
		l = m.LoginRole.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_ChangeNickname) Size() (n int) {
	var l int
	_ = l
	if m.ChangeNickname != nil {
		l = m.ChangeNickname.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_ShowUser) Size() (n int) {
	var l int
	_ = l
	if m.ShowUser != nil {
		l = m.ShowUser.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_GetRoomInfo) Size() (n int) {
	var l int
	_ = l
	if m.GetRoomInfo != nil {
		l = m.GetRoomInfo.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_JoinRoom) Size() (n int) {
	var l int
	_ = l
	if m.JoinRoom != nil {
		l = m.JoinRoom.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_RoomCreate) Size() (n int) {
	var l int
	_ = l
	if m.RoomCreate != nil {
		l = m.RoomCreate.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_GetBigoData) Size() (n int) {
	var l int
	_ = l
	if m.GetBigoData != nil {
		l = m.GetBigoData.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_OnPlayerStateChange) Size() (n int) {
	var l int
	_ = l
	if m.OnPlayerStateChange != nil {
		l = m.OnPlayerStateChange.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_OnGameStateChange) Size() (n int) {
	var l int
	_ = l
	if m.OnGameStateChange != nil {
		l = m.OnGameStateChange.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_GameReady) Size() (n int) {
	var l int
	_ = l
	if m.GameReady != nil {
		l = m.GameReady.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_GameData) Size() (n int) {
	var l int
	_ = l
	if m.GameData != nil {
		l = m.GameData.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_FrameData) Size() (n int) {
	var l int
	_ = l
	if m.FrameData != nil {
		l = m.FrameData.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_UploadGameResult) Size() (n int) {
	var l int
	_ = l
	if m.UploadGameResult != nil {
		l = m.UploadGameResult.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_UpdateBigoData) Size() (n int) {
	var l int
	_ = l
	if m.UpdateBigoData != nil {
		l = m.UpdateBigoData.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_ContinueJoinGame) Size() (n int) {
	var l int
	_ = l
	if m.ContinueJoinGame != nil {
		l = m.ContinueJoinGame.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_PreJoinGame) Size() (n int) {
	var l int
	_ = l
	if m.PreJoinGame != nil {
		l = m.PreJoinGame.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_RequestJoinGame) Size() (n int) {
	var l int
	_ = l
	if m.RequestJoinGame != nil {
		l = m.RequestJoinGame.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_RespondJoinGame) Size() (n int) {
	var l int
	_ = l
	if m.RespondJoinGame != nil {
		l = m.RespondJoinGame.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_BroadcastViewer) Size() (n int) {
	var l int
	_ = l
	if m.BroadcastViewer != nil {
		l = m.BroadcastViewer.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_QuickMatch) Size() (n int) {
	var l int
	_ = l
	if m.QuickMatch != nil {
		l = m.QuickMatch.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response) Size() (n int) {
	var l int
	_ = l
	if m.Session != 0 {
		n += 1 + sovProtocol(uint64(m.Session))
	}
	if m.Code != 0 {
		n += 1 + sovProtocol(uint64(m.Code))
	}
	if m.Gate != nil {
		n += m.Gate.Size()
	}
	if m.Passport != nil {
		n += m.Passport.Size()
	}
	if m.Game != nil {
		n += m.Game.Size()
	}
	if m.Room != nil {
		n += m.Room.Size()
	}
	if m.Hall != nil {
		n += m.Hall.Size()
	}
	return n
}

func (m *Response_BindServiceRet) Size() (n int) {
	var l int
	_ = l
	if m.BindServiceRet != nil {
		l = m.BindServiceRet.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_UserRegisterRet) Size() (n int) {
	var l int
	_ = l
	if m.UserRegisterRet != nil {
		l = m.UserRegisterRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_UserLoginRet) Size() (n int) {
	var l int
	_ = l
	if m.UserLoginRet != nil {
		l = m.UserLoginRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_TokenLoginRet) Size() (n int) {
	var l int
	_ = l
	if m.TokenLoginRet != nil {
		l = m.TokenLoginRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_LoginRoleRet) Size() (n int) {
	var l int
	_ = l
	if m.LoginRoleRet != nil {
		l = m.LoginRoleRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_ChangeNicknameRet) Size() (n int) {
	var l int
	_ = l
	if m.ChangeNicknameRet != nil {
		l = m.ChangeNicknameRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_ShowUserRet) Size() (n int) {
	var l int
	_ = l
	if m.ShowUserRet != nil {
		l = m.ShowUserRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_GetRoomInfoRet) Size() (n int) {
	var l int
	_ = l
	if m.GetRoomInfoRet != nil {
		l = m.GetRoomInfoRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_JoinRoomRet) Size() (n int) {
	var l int
	_ = l
	if m.JoinRoomRet != nil {
		l = m.JoinRoomRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_RoomCreateRet) Size() (n int) {
	var l int
	_ = l
	if m.RoomCreateRet != nil {
		l = m.RoomCreateRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_GetBigoDataRet) Size() (n int) {
	var l int
	_ = l
	if m.GetBigoDataRet != nil {
		l = m.GetBigoDataRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_OnPlayerStateChangeRet) Size() (n int) {
	var l int
	_ = l
	if m.OnPlayerStateChangeRet != nil {
		l = m.OnPlayerStateChangeRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_OnGameStateChangeRet) Size() (n int) {
	var l int
	_ = l
	if m.OnGameStateChangeRet != nil {
		l = m.OnGameStateChangeRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_Kick) Size() (n int) {
	var l int
	_ = l
	n += 2 + sovProtocol(uint64(m.Kick))
	return n
}
func (m *Response_GameStartRet) Size() (n int) {
	var l int
	_ = l
	if m.GameStartRet != nil {
		l = m.GameStartRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_GameDataRet) Size() (n int) {
	var l int
	_ = l
	if m.GameDataRet != nil {
		l = m.GameDataRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_FrameDataRet) Size() (n int) {
	var l int
	_ = l
	if m.FrameDataRet != nil {
		l = m.FrameDataRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_LeaveRet) Size() (n int) {
	var l int
	_ = l
	if m.LeaveRet != nil {
		l = m.LeaveRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_NetworkRet) Size() (n int) {
	var l int
	_ = l
	if m.NetworkRet != nil {
		l = m.NetworkRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_VoiceRet) Size() (n int) {
	var l int
	_ = l
	if m.VoiceRet != nil {
		l = m.VoiceRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_GameResetRet) Size() (n int) {
	var l int
	_ = l
	if m.GameResetRet != nil {
		l = m.GameResetRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_PlayerLeaveRet) Size() (n int) {
	var l int
	_ = l
	if m.PlayerLeaveRet != nil {
		l = m.PlayerLeaveRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_PlayerJoinRet) Size() (n int) {
	var l int
	_ = l
	if m.PlayerJoinRet != nil {
		l = m.PlayerJoinRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_UpdateBigoDataRet) Size() (n int) {
	var l int
	_ = l
	if m.UpdateBigoDataRet != nil {
		l = m.UpdateBigoDataRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_ContinueJoinGameReq) Size() (n int) {
	var l int
	_ = l
	if m.ContinueJoinGameReq != nil {
		l = m.ContinueJoinGameReq.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_PreJoinGameReq) Size() (n int) {
	var l int
	_ = l
	if m.PreJoinGameReq != nil {
		l = m.PreJoinGameReq.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_BroadcastViewerRet) Size() (n int) {
	var l int
	_ = l
	if m.BroadcastViewerRet != nil {
		l = m.BroadcastViewerRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_EndGameRet) Size() (n int) {
	var l int
	_ = l
	if m.EndGameRet != nil {
		l = m.EndGameRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_QuickMatchRet) Size() (n int) {
	var l int
	_ = l
	if m.QuickMatchRet != nil {
		l = m.QuickMatchRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}

func sovProtocol(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozProtocol(x uint64) (n int) {
	return sovProtocol(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Request) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Request: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Request: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Session", wireType)
			}
			m.Session = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Session |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BindService", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &BindService{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Gate = &Request_BindService{v}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field KickOut", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &KickOut{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Gate = &Request_KickOut{v}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PushMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &PushMessage{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Gate = &Request_PushMessage{v}
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserRegister", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UserRegister{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Passport = &Request_UserRegister{v}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserLogin", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UserLogin{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Passport = &Request_UserLogin{v}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenLogin", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &TokenLogin{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Passport = &Request_TokenLogin{v}
			iNdEx = postIndex
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoginRole", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &LoginRole{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Game = &Request_LoginRole{v}
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangeNickname", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ChangeNickname{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Game = &Request_ChangeNickname{v}
			iNdEx = postIndex
		case 100:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShowUser", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ShowUser{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Request_ShowUser{v}
			iNdEx = postIndex
		case 101:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GetRoomInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &GetRoomInfo{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Request_GetRoomInfo{v}
			iNdEx = postIndex
		case 102:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JoinRoom", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &JoinRoom{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Request_JoinRoom{v}
			iNdEx = postIndex
		case 103:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomCreate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &RoomCreate{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Request_RoomCreate{v}
			iNdEx = postIndex
		case 104:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GetBigoData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &GetBigoData{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Request_GetBigoData{v}
			iNdEx = postIndex
		case 105:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OnPlayerStateChange", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &OnPlayerStateChange{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Request_OnPlayerStateChange{v}
			iNdEx = postIndex
		case 106:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OnGameStateChange", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &OnGameStateChange{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Request_OnGameStateChange{v}
			iNdEx = postIndex
		case 121:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GameReady", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &GameReady{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Request_GameReady{v}
			iNdEx = postIndex
		case 122:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GameData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &GameData{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Request_GameData{v}
			iNdEx = postIndex
		case 123:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FrameData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &FrameData{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Request_FrameData{v}
			iNdEx = postIndex
		case 124:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UploadGameResult", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UploadGameResult{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Request_UploadGameResult{v}
			iNdEx = postIndex
		case 125:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateBigoData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UpdateBigoData{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Request_UpdateBigoData{v}
			iNdEx = postIndex
		case 127:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContinueJoinGame", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ContinueJoinGame{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Request_ContinueJoinGame{v}
			iNdEx = postIndex
		case 128:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PreJoinGame", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &PreJoinGame{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Request_PreJoinGame{v}
			iNdEx = postIndex
		case 129:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestJoinGame", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &RequestJoinGame{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Request_RequestJoinGame{v}
			iNdEx = postIndex
		case 130:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RespondJoinGame", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &RespondJoinGame{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Request_RespondJoinGame{v}
			iNdEx = postIndex
		case 131:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BroadcastViewer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &BroadcastViewer{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Request_BroadcastViewer{v}
			iNdEx = postIndex
		case 200:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QuickMatch", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &QuickMatch{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Hall = &Request_QuickMatch{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProtocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Response) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Response: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Response: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Session", wireType)
			}
			m.Session = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Session |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= (Code(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BindServiceRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &BindServiceRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Gate = &Response_BindServiceRet{v}
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserRegisterRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UserRegisterRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Passport = &Response_UserRegisterRet{v}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserLoginRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UserLoginRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Passport = &Response_UserLoginRet{v}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenLoginRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &TokenLoginRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Passport = &Response_TokenLoginRet{v}
			iNdEx = postIndex
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoginRoleRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &LoginRoleRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Game = &Response_LoginRoleRet{v}
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangeNicknameRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ChangeNicknameRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Game = &Response_ChangeNicknameRet{v}
			iNdEx = postIndex
		case 100:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShowUserRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ShowUserRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Response_ShowUserRet{v}
			iNdEx = postIndex
		case 101:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GetRoomInfoRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &GetRoomInfoRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Response_GetRoomInfoRet{v}
			iNdEx = postIndex
		case 102:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JoinRoomRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &JoinRoomRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Response_JoinRoomRet{v}
			iNdEx = postIndex
		case 103:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomCreateRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &RoomCreateRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Response_RoomCreateRet{v}
			iNdEx = postIndex
		case 104:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GetBigoDataRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &GetBigoDataRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Response_GetBigoDataRet{v}
			iNdEx = postIndex
		case 105:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OnPlayerStateChangeRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &OnPlayerStateChangeRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Response_OnPlayerStateChangeRet{v}
			iNdEx = postIndex
		case 106:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OnGameStateChangeRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &OnGameStateChangeRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Response_OnGameStateChangeRet{v}
			iNdEx = postIndex
		case 1005:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Kick", wireType)
			}
			var v KickType
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (KickType(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Gate = &Response_Kick{v}
		case 1101:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GameStartRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &GameStartRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Response_GameStartRet{v}
			iNdEx = postIndex
		case 1102:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GameDataRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &GameDataRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Response_GameDataRet{v}
			iNdEx = postIndex
		case 1103:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FrameDataRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &FrameDataRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Response_FrameDataRet{v}
			iNdEx = postIndex
		case 1104:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LeaveRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &LeaveRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Response_LeaveRet{v}
			iNdEx = postIndex
		case 1105:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &NetworkRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Response_NetworkRet{v}
			iNdEx = postIndex
		case 1106:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoiceRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &VoiceRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Response_VoiceRet{v}
			iNdEx = postIndex
		case 1107:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GameResetRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &GameResetRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Response_GameResetRet{v}
			iNdEx = postIndex
		case 1108:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerLeaveRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &PlayerLeaveRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Response_PlayerLeaveRet{v}
			iNdEx = postIndex
		case 1109:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerJoinRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &PlayerJoinRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Response_PlayerJoinRet{v}
			iNdEx = postIndex
		case 1110:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateBigoDataRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UpdateBigoDataRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Response_UpdateBigoDataRet{v}
			iNdEx = postIndex
		case 1111:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContinueJoinGameReq", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ContinueJoinGameReq{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Response_ContinueJoinGameReq{v}
			iNdEx = postIndex
		case 1112:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PreJoinGameReq", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &PreJoinGameReq{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Response_PreJoinGameReq{v}
			iNdEx = postIndex
		case 1113:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BroadcastViewerRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &BroadcastViewerRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Response_BroadcastViewerRet{v}
			iNdEx = postIndex
		case 1114:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndGameRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &EndGameRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Room = &Response_EndGameRet{v}
			iNdEx = postIndex
		case 1200:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QuickMatchRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &QuickMatchRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Hall = &Response_QuickMatchRet{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProtocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipProtocol(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowProtocol
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthProtocol
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowProtocol
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipProtocol(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthProtocol = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowProtocol   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("protocol.proto", fileDescriptorProtocol) }

var fileDescriptorProtocol = []byte{
	// 1270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0x4b, 0x73, 0x1c, 0x35,
	0x17, 0x4d, 0x7b, 0x9c, 0xb8, 0x23, 0xc7, 0x63, 0x47, 0x1e, 0xfb, 0xd3, 0x67, 0xc0, 0xe5, 0xf2,
	0xca, 0x6c, 0x5c, 0x10, 0xa7, 0xa0, 0xa0, 0xa0, 0xa0, 0xec, 0x40, 0x04, 0x71, 0x08, 0x28, 0x81,
	0x05, 0x1b, 0x57, 0xbb, 0x47, 0x9e, 0xe9, 0xcc, 0x4c, 0x6b, 0xdc, 0xad, 0xb1, 0xcb, 0x3c, 0x8a,
	0xd7, 0x9e, 0xdf, 0xc2, 0xcf, 0xc8, 0x06, 0x08, 0xef, 0xc7, 0x8a, 0xf2, 0x9e, 0x1f, 0xc0, 0x8e,
	0xba, 0xea, 0x51, 0xb7, 0x74, 0xbb, 0xe3, 0x2a, 0x56, 0xdd, 0xd2, 0x39, 0xe7, 0x5e, 0xf5, 0x6d,
	0xe9, 0x1e, 0x91, 0xf6, 0x38, 0x53, 0x5a, 0xc5, 0x6a, 0xb8, 0x6d, 0x5e, 0x68, 0x68, 0xc7, 0x6b,
	0x4b, 0x99, 0xcc, 0x27, 0x43, 0x1d, 0xab, 0xae, 0x2c, 0xb0, 0xb5, 0xa5, 0x5e, 0xa4, 0xe5, 0xc1,
	0x48, 0x75, 0xe5, 0x94, 0xbd, 0xd6, 0x31, 0x33, 0x49, 0xaa, 0x65, 0x76, 0x14, 0xc5, 0x96, 0xc7,
	0xc6, 0x51, 0x9e, 0x8f, 0x55, 0xa6, 0x6b, 0x48, 0xa7, 0x17, 0x8d, 0xea, 0xfc, 0x4e, 0xa6, 0xd4,
	0xa8, 0x3e, 0xdb, 0x8f, 0x86, 0x43, 0x3c, 0xbb, 0xf9, 0xf5, 0x02, 0x99, 0x13, 0xf2, 0x78, 0x22,
	0x73, 0x4d, 0x19, 0x99, 0xcb, 0x65, 0x9e, 0x27, 0x2a, 0x65, 0xc1, 0x46, 0xb0, 0x75, 0x59, 0xd8,
	0x21, 0x7d, 0x99, 0xcc, 0x1f, 0x26, 0x69, 0xf7, 0xbe, 0xcc, 0x4e, 0x92, 0x58, 0xb2, 0xcb, 0x1b,
	0xc1, 0xd6, 0xfc, 0x8d, 0xd5, 0xed, 0xf2, 0x5b, 0x01, 0x3c, 0xc8, 0x0b, 0x94, 0x5f, 0x12, 0x2e,
	0x99, 0x6e, 0x93, 0xb9, 0x41, 0x12, 0x0f, 0xee, 0x4d, 0x34, 0x23, 0x46, 0x47, 0x2b, 0x1d, 0x00,
	0x07, 0x6a, 0xa2, 0xf9, 0x25, 0x61, 0x49, 0x90, 0x6b, 0x3c, 0xc9, 0xfb, 0x77, 0x65, 0x9e, 0x47,
	0x3d, 0xc9, 0xe6, 0x71, 0x2e, 0x00, 0x0f, 0x46, 0x05, 0x0a, 0xb9, 0x1c, 0x32, 0x7d, 0x85, 0x5c,
	0x9b, 0xe4, 0x32, 0x13, 0xb2, 0x97, 0xe4, 0x5a, 0x66, 0xac, 0x83, 0xc5, 0x2e, 0xca, 0x03, 0xe1,
	0xb1, 0xe9, 0x0e, 0xb9, 0x0a, 0xe3, 0x7d, 0xd5, 0x4b, 0x52, 0xb6, 0x62, 0xa4, 0xcb, 0xbe, 0xd4,
	0x40, 0x3c, 0x10, 0x15, 0x8f, 0xbe, 0x40, 0x88, 0x56, 0x03, 0x99, 0x16, 0xaa, 0x55, 0xa3, 0xea,
	0x54, 0xaa, 0x0a, 0xe3, 0x81, 0x70, 0x98, 0x90, 0x6c, 0x08, 0x2f, 0x42, 0x0d, 0x25, 0xdb, 0xc1,
	0xc9, 0x4a, 0x88, 0xcf, 0x88, 0x8a, 0x47, 0x77, 0x49, 0x3b, 0xee, 0x47, 0x69, 0x4f, 0xbe, 0x93,
	0xc4, 0x83, 0x34, 0x1a, 0x49, 0x76, 0xd3, 0x28, 0x59, 0xa5, 0xf4, 0x71, 0x3e, 0x23, 0x90, 0x82,
	0x3e, 0x47, 0xc2, 0xbc, 0xaf, 0x4e, 0xdf, 0xcf, 0x65, 0xc6, 0xba, 0xf8, 0x87, 0x58, 0x84, 0xb7,
	0x44, 0xc9, 0xa2, 0x2f, 0x91, 0xf9, 0x9e, 0xd4, 0x42, 0xa9, 0xd1, 0x5b, 0xe9, 0x91, 0x62, 0xd2,
	0x88, 0x56, 0x2a, 0x91, 0x03, 0xf2, 0x96, 0x70, 0xb9, 0x90, 0xec, 0xa1, 0x82, 0xc5, 0xab, 0x11,
	0x3b, 0xc2, 0xc9, 0x2c, 0x02, 0xc9, 0xec, 0x3b, 0xd4, 0x13, 0xb6, 0xef, 0x5e, 0x26, 0x23, 0x2d,
	0x59, 0x0f, 0xd7, 0xb3, 0xc2, 0x78, 0x4b, 0x38, 0xcc, 0xe9, 0x22, 0x77, 0x93, 0x9e, 0xba, 0x15,
	0xe9, 0x88, 0xf5, 0x1b, 0x16, 0x69, 0xc1, 0xe9, 0x22, 0xed, 0x90, 0xbe, 0x47, 0x96, 0x55, 0xfa,
	0xee, 0x30, 0x3a, 0x93, 0xd9, 0x7d, 0x1d, 0x69, 0xb9, 0x67, 0x0a, 0xc6, 0x12, 0x13, 0xe2, 0x99,
	0x2a, 0x44, 0x03, 0x89, 0xb7, 0x44, 0x93, 0x96, 0xde, 0x21, 0xd7, 0x55, 0x7a, 0x3b, 0x1a, 0x49,
	0x37, 0xe0, 0x43, 0x13, 0xf0, 0x29, 0x37, 0x20, 0xa2, 0xf0, 0x96, 0xa8, 0xeb, 0x60, 0xab, 0xc0,
	0x39, 0x17, 0x32, 0xea, 0x9e, 0xb1, 0x33, 0xbc, 0x55, 0x4a, 0x88, 0xb7, 0x44, 0xc5, 0x83, 0xca,
	0xc3, 0xc0, 0x14, 0xe3, 0x23, 0x5c, 0x79, 0x8b, 0x40, 0xe5, 0xed, 0x3b, 0xa4, 0x39, 0xca, 0xac,
	0xe4, 0x63, 0x9c, 0xa6, 0x84, 0x20, 0x4d, 0x39, 0xa0, 0x9c, 0x2c, 0x4d, 0xc6, 0x43, 0x15, 0x75,
	0x6f, 0x9b, 0xcc, 0xd0, 0xe1, 0xd8, 0x27, 0x46, 0xbb, 0xe6, 0x1c, 0x1d, 0xc4, 0xe0, 0x2d, 0x51,
	0x53, 0xc1, 0xde, 0x9e, 0x8c, 0xbb, 0x91, 0x96, 0xe5, 0x3f, 0xfc, 0x14, 0xef, 0x6d, 0x1f, 0xe7,
	0x2d, 0x81, 0x14, 0xb0, 0x9a, 0x58, 0xa5, 0x3a, 0x49, 0x27, 0xf2, 0x6d, 0x95, 0x98, 0x42, 0xb2,
	0xcf, 0xf0, 0x6a, 0x30, 0x03, 0x56, 0x83, 0xe7, 0x4c, 0x17, 0xca, 0xaa, 0x20, 0x9f, 0x07, 0x78,
	0x3f, 0x39, 0x28, 0xec, 0x27, 0x67, 0x48, 0xdf, 0x24, 0x8b, 0x59, 0xd1, 0x52, 0x4b, 0xfd, 0x17,
	0x85, 0xfe, 0xff, 0xce, 0x46, 0xf6, 0x19, 0xbc, 0x25, 0xb0, 0xa8, 0x88, 0x93, 0x8f, 0x55, 0xda,
	0x2d, 0xe3, 0x7c, 0xd9, 0x10, 0xc7, 0x63, 0x14, 0x71, 0xbc, 0x29, 0x88, 0x73, 0x98, 0xa9, 0xa8,
	0x1b, 0x47, 0xb9, 0xfe, 0x20, 0x91, 0xa7, 0x32, 0x63, 0x5f, 0xd5, 0xe2, 0x20, 0x06, 0xc4, 0x41,
	0x53, 0xf4, 0x45, 0x42, 0x8e, 0x27, 0x49, 0x3c, 0xb8, 0x1b, 0xe9, 0xb8, 0xcf, 0x1e, 0x05, 0xf8,
	0x6c, 0x56, 0x20, 0x9f, 0x15, 0x0e, 0x75, 0xf7, 0x0a, 0x99, 0x05, 0x63, 0xdb, 0x25, 0x24, 0xb4,
	0x56, 0x56, 0xcc, 0x8d, 0x24, 0x3c, 0xe1, 0x14, 0xc3, 0x13, 0x0c, 0x6a, 0xf3, 0x9f, 0x45, 0x12,
	0x0a, 0xf3, 0x01, 0xb9, 0xbc, 0xc0, 0x91, 0x36, 0xc9, 0x2c, 0x38, 0x29, 0x9b, 0xd9, 0x08, 0xb6,
	0xda, 0x37, 0xda, 0xd5, 0x22, 0xf6, 0x54, 0x57, 0x0a, 0x83, 0xd1, 0x5b, 0xa4, 0xed, 0x18, 0x91,
	0x90, 0x7a, 0x6a, 0x5c, 0x6b, 0xcd, 0xc6, 0x75, 0x90, 0x49, 0x30, 0x22, 0xa4, 0xa1, 0x6f, 0x90,
	0x45, 0xd7, 0x25, 0x20, 0x4c, 0x07, 0x17, 0x0f, 0x11, 0x78, 0x20, 0xb0, 0xc6, 0x5a, 0x93, 0x69,
	0xfe, 0x10, 0x63, 0xa5, 0xc9, 0x9a, 0x2c, 0x6a, 0xad, 0xc9, 0x8e, 0xe9, 0x6b, 0x64, 0xa1, 0xf2,
	0x0e, 0x90, 0x17, 0x46, 0xf3, 0xbf, 0x26, 0xa3, 0x29, 0xf4, 0x3e, 0x1f, 0xd2, 0x97, 0x36, 0x02,
	0xfa, 0x1d, 0x9c, 0xde, 0x45, 0xf9, 0x8c, 0xf0, 0xd8, 0xd0, 0xce, 0x7c, 0x17, 0x81, 0x10, 0x37,
	0x71, 0x3b, 0xab, 0x51, 0xf8, 0x8c, 0xa8, 0xeb, 0xa0, 0x53, 0x5b, 0x6b, 0x81, 0x30, 0x5d, 0x7c,
	0xb2, 0x1c, 0x10, 0x4e, 0x96, 0x33, 0x84, 0x1e, 0xe1, 0xb8, 0x0b, 0xa8, 0x25, 0xee, 0x11, 0x3e,
	0x0e, 0x3d, 0xc2, 0x9f, 0x81, 0xf4, 0xd6, 0x6c, 0x20, 0xc0, 0x11, 0x4e, 0xef, 0x80, 0x90, 0xde,
	0x19, 0xc2, 0x5f, 0xa8, 0x1c, 0x07, 0xc4, 0x3d, 0xfc, 0x17, 0x3c, 0x98, 0xb7, 0x84, 0xcf, 0x9f,
	0xae, 0xdf, 0xb6, 0x2b, 0x88, 0xd0, 0x6f, 0x58, 0xbf, 0x83, 0x4f, 0xd7, 0xef, 0xcc, 0xd0, 0x0f,
	0xc9, 0x6a, 0x83, 0xe3, 0x40, 0xac, 0xc2, 0xb0, 0x36, 0x2e, 0x34, 0xac, 0x22, 0xe6, 0x13, 0x22,
	0xd0, 0x07, 0xa4, 0x53, 0xb3, 0x1f, 0x88, 0x5c, 0x38, 0xd7, 0xfa, 0x05, 0xce, 0x55, 0xc4, 0x6d,
	0x54, 0xd3, 0x67, 0xc9, 0x2c, 0x5c, 0xee, 0xd8, 0xdf, 0x73, 0xe6, 0xb0, 0x3a, 0x3e, 0x74, 0x27,
	0x89, 0x07, 0x0f, 0xce, 0xc6, 0x70, 0x8f, 0x33, 0x14, 0xfa, 0x2a, 0xb9, 0xd6, 0x2b, 0x02, 0x64,
	0x1a, 0x12, 0x7f, 0x1b, 0xe2, 0x7d, 0xea, 0xc2, 0xbc, 0x25, 0x3c, 0x3a, 0x74, 0x6d, 0x6b, 0x67,
	0xa0, 0xfe, 0x2e, 0xac, 0xdd, 0x02, 0x2a, 0xd4, 0xdc, 0x02, 0xaa, 0x21, 0xa4, 0x2e, 0x6d, 0x0d,
	0xc4, 0xdf, 0xd7, 0x52, 0xbb, 0x30, 0xa4, 0x76, 0xc7, 0xf4, 0x79, 0x12, 0x0e, 0x65, 0x74, 0x62,
	0xca, 0xf5, 0x38, 0xc4, 0x86, 0x6b, 0x21, 0x30, 0x5c, 0xfb, 0x0e, 0xfd, 0x34, 0x95, 0xfa, 0x54,
	0x65, 0x03, 0x10, 0xfd, 0x10, 0xe2, 0x7e, 0x5a, 0x81, 0x70, 0xd7, 0xa9, 0x46, 0x90, 0xeb, 0x44,
	0x4d, 0x5b, 0xda, 0x8f, 0xb5, 0x5c, 0x16, 0x82, 0x5c, 0xf6, 0xdd, 0x16, 0x56, 0xc8, 0x5c, 0x9a,
	0xc2, 0xfe, 0xd4, 0x58, 0x58, 0x0b, 0xdb, 0xc2, 0xda, 0x31, 0xdd, 0x23, 0xed, 0xb1, 0xd9, 0x30,
	0xfb, 0xf6, 0x1b, 0x7f, 0x0e, 0xf1, 0xce, 0xf5, 0x09, 0xb0, 0x73, 0xfd, 0x19, 0xfa, 0x3a, 0x59,
	0x28, 0x66, 0xc0, 0x99, 0x20, 0xc6, 0x2f, 0x21, 0x3e, 0x3f, 0x1e, 0x0e, 0xe7, 0xc7, 0x9b, 0xa0,
	0xfb, 0xe4, 0xba, 0xef, 0xf8, 0x10, 0xe5, 0xd7, 0x10, 0x37, 0xa2, 0x1a, 0x07, 0xee, 0x55, 0xb5,
	0x49, 0x2a, 0xc8, 0x32, 0xf6, 0x7d, 0x21, 0x8f, 0xd9, 0x6f, 0x21, 0xbe, 0xf8, 0x35, 0xb0, 0xe0,
	0xe2, 0xd7, 0x30, 0x6d, 0x0a, 0x95, 0x79, 0xe1, 0x7e, 0xaf, 0x17, 0x2a, 0x43, 0x91, 0x90, 0x84,
	0xde, 0x23, 0x14, 0x79, 0x2f, 0x7c, 0xe7, 0x1f, 0x45, 0xa0, 0xa7, 0x9f, 0xe8, 0xd9, 0xc5, 0x87,
	0x36, 0x48, 0x61, 0xa7, 0xc9, 0x74, 0x7a, 0xd9, 0xd2, 0xec, 0xcf, 0xda, 0x4e, 0xab, 0x40, 0xd8,
	0x69, 0xd5, 0x08, 0x7e, 0x59, 0xe5, 0xe3, 0xa0, 0xfd, 0xe6, 0x2a, 0xfe, 0x65, 0x1e, 0xce, 0x67,
	0x85, 0x2f, 0xf8, 0x2f, 0xde, 0xbf, 0x7b, 0xed, 0xd1, 0xf9, 0x7a, 0xf0, 0xf8, 0x7c, 0x3d, 0xf8,
	0xeb, 0x7c, 0x3d, 0x38, 0xbc, 0x62, 0x52, 0xec, 0xfc, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x99, 0x05,
	0x95, 0xaa, 0x53, 0x0f, 0x00, 0x00,
}
