// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: scene.proto

package scene

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Vector struct {
	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	Z float32 `protobuf:"fixed32,3,opt,name=z,proto3" json:"z,omitempty"`
}

func (m *Vector) Reset()                    { *m = Vector{} }
func (m *Vector) String() string            { return proto.CompactTextString(m) }
func (*Vector) ProtoMessage()               {}
func (*Vector) Descriptor() ([]byte, []int) { return fileDescriptorScene, []int{0} }

func (m *Vector) GetX() float32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Vector) GetY() float32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Vector) GetZ() float32 {
	if m != nil {
		return m.Z
	}
	return 0
}

type Entity struct {
	Id        int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Position  *Vector `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
	Direction *Vector `protobuf:"bytes,3,opt,name=direction" json:"direction,omitempty"`
	Data      string  `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Entity) Reset()                    { *m = Entity{} }
func (m *Entity) String() string            { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()               {}
func (*Entity) Descriptor() ([]byte, []int) { return fileDescriptorScene, []int{1} }

func (m *Entity) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Entity) GetPosition() *Vector {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *Entity) GetDirection() *Vector {
	if m != nil {
		return m.Direction
	}
	return nil
}

func (m *Entity) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type SpaceEnter struct {
	ClientID  int32   `protobuf:"varint,1,opt,name=clientID,proto3" json:"clientID,omitempty"`
	SpaceID   int32   `protobuf:"varint,2,opt,name=spaceID,proto3" json:"spaceID,omitempty"`
	Position  *Vector `protobuf:"bytes,3,opt,name=position" json:"position,omitempty"`
	Direction *Vector `protobuf:"bytes,4,opt,name=direction" json:"direction,omitempty"`
}

func (m *SpaceEnter) Reset()                    { *m = SpaceEnter{} }
func (m *SpaceEnter) String() string            { return proto.CompactTextString(m) }
func (*SpaceEnter) ProtoMessage()               {}
func (*SpaceEnter) Descriptor() ([]byte, []int) { return fileDescriptorScene, []int{2} }

func (m *SpaceEnter) GetClientID() int32 {
	if m != nil {
		return m.ClientID
	}
	return 0
}

func (m *SpaceEnter) GetSpaceID() int32 {
	if m != nil {
		return m.SpaceID
	}
	return 0
}

func (m *SpaceEnter) GetPosition() *Vector {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *SpaceEnter) GetDirection() *Vector {
	if m != nil {
		return m.Direction
	}
	return nil
}

type SpaceEnterRet struct {
	EntityID int32 `protobuf:"varint,1,opt,name=entityID,proto3" json:"entityID,omitempty"`
}

func (m *SpaceEnterRet) Reset()                    { *m = SpaceEnterRet{} }
func (m *SpaceEnterRet) String() string            { return proto.CompactTextString(m) }
func (*SpaceEnterRet) ProtoMessage()               {}
func (*SpaceEnterRet) Descriptor() ([]byte, []int) { return fileDescriptorScene, []int{3} }

func (m *SpaceEnterRet) GetEntityID() int32 {
	if m != nil {
		return m.EntityID
	}
	return 0
}

type SpaceMove struct {
	SpaceID   int32   `protobuf:"varint,1,opt,name=spaceID,proto3" json:"spaceID,omitempty"`
	EntityID  int32   `protobuf:"varint,2,opt,name=entityID,proto3" json:"entityID,omitempty"`
	Position  *Vector `protobuf:"bytes,3,opt,name=position" json:"position,omitempty"`
	Direction *Vector `protobuf:"bytes,4,opt,name=direction" json:"direction,omitempty"`
}

func (m *SpaceMove) Reset()                    { *m = SpaceMove{} }
func (m *SpaceMove) String() string            { return proto.CompactTextString(m) }
func (*SpaceMove) ProtoMessage()               {}
func (*SpaceMove) Descriptor() ([]byte, []int) { return fileDescriptorScene, []int{4} }

func (m *SpaceMove) GetSpaceID() int32 {
	if m != nil {
		return m.SpaceID
	}
	return 0
}

func (m *SpaceMove) GetEntityID() int32 {
	if m != nil {
		return m.EntityID
	}
	return 0
}

func (m *SpaceMove) GetPosition() *Vector {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *SpaceMove) GetDirection() *Vector {
	if m != nil {
		return m.Direction
	}
	return nil
}

type SpaceMoveRet struct {
}

func (m *SpaceMoveRet) Reset()                    { *m = SpaceMoveRet{} }
func (m *SpaceMoveRet) String() string            { return proto.CompactTextString(m) }
func (*SpaceMoveRet) ProtoMessage()               {}
func (*SpaceMoveRet) Descriptor() ([]byte, []int) { return fileDescriptorScene, []int{5} }

type SpaceLeave struct {
	SpaceID  int32 `protobuf:"varint,1,opt,name=spaceID,proto3" json:"spaceID,omitempty"`
	EntityID int32 `protobuf:"varint,2,opt,name=entityID,proto3" json:"entityID,omitempty"`
}

func (m *SpaceLeave) Reset()                    { *m = SpaceLeave{} }
func (m *SpaceLeave) String() string            { return proto.CompactTextString(m) }
func (*SpaceLeave) ProtoMessage()               {}
func (*SpaceLeave) Descriptor() ([]byte, []int) { return fileDescriptorScene, []int{6} }

func (m *SpaceLeave) GetSpaceID() int32 {
	if m != nil {
		return m.SpaceID
	}
	return 0
}

func (m *SpaceLeave) GetEntityID() int32 {
	if m != nil {
		return m.EntityID
	}
	return 0
}

type SpaceLeaveRet struct {
}

func (m *SpaceLeaveRet) Reset()                    { *m = SpaceLeaveRet{} }
func (m *SpaceLeaveRet) String() string            { return proto.CompactTextString(m) }
func (*SpaceLeaveRet) ProtoMessage()               {}
func (*SpaceLeaveRet) Descriptor() ([]byte, []int) { return fileDescriptorScene, []int{7} }

type GetState struct {
	SpaceID  int32 `protobuf:"varint,1,opt,name=spaceID,proto3" json:"spaceID,omitempty"`
	EntityID int32 `protobuf:"varint,2,opt,name=entityID,proto3" json:"entityID,omitempty"`
}

func (m *GetState) Reset()                    { *m = GetState{} }
func (m *GetState) String() string            { return proto.CompactTextString(m) }
func (*GetState) ProtoMessage()               {}
func (*GetState) Descriptor() ([]byte, []int) { return fileDescriptorScene, []int{8} }

func (m *GetState) GetSpaceID() int32 {
	if m != nil {
		return m.SpaceID
	}
	return 0
}

func (m *GetState) GetEntityID() int32 {
	if m != nil {
		return m.EntityID
	}
	return 0
}

type GetStateRet struct {
	Neighbors []*Entity `protobuf:"bytes,1,rep,name=neighbors" json:"neighbors,omitempty"`
}

func (m *GetStateRet) Reset()                    { *m = GetStateRet{} }
func (m *GetStateRet) String() string            { return proto.CompactTextString(m) }
func (*GetStateRet) ProtoMessage()               {}
func (*GetStateRet) Descriptor() ([]byte, []int) { return fileDescriptorScene, []int{9} }

func (m *GetStateRet) GetNeighbors() []*Entity {
	if m != nil {
		return m.Neighbors
	}
	return nil
}

// 场景信息变更推送
type SpacePush struct {
	Neighbors []*Entity `protobuf:"bytes,1,rep,name=neighbors" json:"neighbors,omitempty"`
}

func (m *SpacePush) Reset()                    { *m = SpacePush{} }
func (m *SpacePush) String() string            { return proto.CompactTextString(m) }
func (*SpacePush) ProtoMessage()               {}
func (*SpacePush) Descriptor() ([]byte, []int) { return fileDescriptorScene, []int{10} }

func (m *SpacePush) GetNeighbors() []*Entity {
	if m != nil {
		return m.Neighbors
	}
	return nil
}

func init() {
	proto.RegisterType((*Vector)(nil), "Vector")
	proto.RegisterType((*Entity)(nil), "Entity")
	proto.RegisterType((*SpaceEnter)(nil), "space_enter")
	proto.RegisterType((*SpaceEnterRet)(nil), "space_enter_ret")
	proto.RegisterType((*SpaceMove)(nil), "space_move")
	proto.RegisterType((*SpaceMoveRet)(nil), "space_move_ret")
	proto.RegisterType((*SpaceLeave)(nil), "space_leave")
	proto.RegisterType((*SpaceLeaveRet)(nil), "space_leave_ret")
	proto.RegisterType((*GetState)(nil), "get_state")
	proto.RegisterType((*GetStateRet)(nil), "get_state_ret")
	proto.RegisterType((*SpacePush)(nil), "space_push")
}

func init() { proto.RegisterFile("scene.proto", fileDescriptorScene) }

var fileDescriptorScene = []byte{
	// 322 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x93, 0x4f, 0x6b, 0xc2, 0x40,
	0x10, 0xc5, 0xd9, 0xc4, 0x7f, 0x19, 0x5b, 0xdb, 0xee, 0x29, 0xf4, 0x24, 0x5b, 0x04, 0x2f, 0xf5,
	0xa0, 0xd0, 0x7b, 0xa9, 0x3d, 0x78, 0xcd, 0xa1, 0x57, 0x89, 0xc9, 0xa0, 0x0b, 0x36, 0x1b, 0x76,
	0xa7, 0x45, 0xfd, 0x10, 0xed, 0x57, 0x2e, 0x99, 0x34, 0xc6, 0x1c, 0x0a, 0x22, 0xbd, 0xed, 0x63,
	0xde, 0x3c, 0x7e, 0xfb, 0xd8, 0x85, 0xbe, 0x4b, 0x30, 0xc3, 0x49, 0x6e, 0x0d, 0x19, 0x35, 0x85,
	0xce, 0x1b, 0x26, 0x64, 0xac, 0xbc, 0x02, 0xb1, 0x0b, 0xc5, 0x50, 0x8c, 0xbd, 0x48, 0xec, 0x0a,
	0xb5, 0x0f, 0xbd, 0x52, 0xed, 0x0b, 0x75, 0x08, 0xfd, 0x52, 0x1d, 0xd4, 0x0e, 0x3a, 0xaf, 0x19,
	0x69, 0xda, 0xcb, 0x01, 0x78, 0x3a, 0xe5, 0xa5, 0x76, 0xe4, 0xe9, 0x54, 0x3e, 0x40, 0x2f, 0x37,
	0x4e, 0x93, 0x36, 0x19, 0x2f, 0xf7, 0xa7, 0xdd, 0x49, 0x19, 0x1f, 0x1d, 0x07, 0x72, 0x04, 0x41,
	0xaa, 0x2d, 0x26, 0xec, 0xf2, 0x9b, 0xae, 0x7a, 0x22, 0x25, 0xb4, 0xd2, 0x98, 0xe2, 0xb0, 0x35,
	0x14, 0xe3, 0x20, 0xe2, 0xb3, 0xfa, 0x16, 0xd0, 0x77, 0x79, 0x9c, 0xe0, 0x12, 0x33, 0x42, 0x2b,
	0xef, 0xa1, 0x97, 0x6c, 0x35, 0x66, 0xb4, 0x98, 0xff, 0x52, 0x1c, 0xb5, 0x0c, 0xa1, 0xcb, 0xd6,
	0xc5, 0x9c, 0x51, 0xda, 0x51, 0x25, 0x1b, 0x94, 0xfe, 0x59, 0x94, 0xad, 0xbf, 0x28, 0xd5, 0x23,
	0xdc, 0x9c, 0x00, 0x2d, 0x2d, 0x52, 0x01, 0x85, 0x5c, 0x4f, 0x0d, 0x55, 0x69, 0xf5, 0x25, 0x00,
	0x4a, 0xff, 0xbb, 0xf9, 0xc4, 0x53, 0x46, 0xd1, 0x64, 0x3c, 0x0d, 0xf1, 0x9a, 0x21, 0xff, 0xca,
	0x7f, 0x0b, 0x83, 0x9a, 0xa7, 0xc0, 0x57, 0x2f, 0x55, 0xc5, 0x5b, 0x8c, 0x2f, 0x45, 0x54, 0x77,
	0x55, 0x2d, 0x1c, 0xc2, 0xb9, 0xcf, 0x10, 0xac, 0x91, 0x96, 0x8e, 0x62, 0xba, 0x34, 0xf5, 0x09,
	0xae, 0x8f, 0x11, 0x5c, 0xf5, 0x08, 0x82, 0x0c, 0xf5, 0x7a, 0xb3, 0x32, 0xd6, 0x85, 0x62, 0xe8,
	0xf3, 0x25, 0xcb, 0xb7, 0x19, 0xd5, 0x13, 0x35, 0xab, 0x4a, 0xcf, 0x3f, 0xdc, 0xe6, 0xcc, 0xa5,
	0x55, 0x87, 0x3f, 0xc8, 0xec, 0x27, 0x00, 0x00, 0xff, 0xff, 0xb8, 0xc0, 0x26, 0x58, 0x2f, 0x03,
	0x00, 0x00,
}
