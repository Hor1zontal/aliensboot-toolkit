// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: protocol.proto

package room

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// request
type Request struct {
	// -----------------房间模块接口---------------
	//
	// Types that are valid to be assigned to Request:
	//	*Request_CreateRoom
	//	*Request_JoinRoom
	//	*Request_LeaveRoom
	Request          isRequest_Request `protobuf_oneof:"request"`
	Command          *Command          `protobuf:"bytes,40,opt,name=command" json:"command,omitempty"`
	RequestLostFrame *RequestLostFrame `protobuf:"bytes,41,opt,name=requestLostFrame" json:"requestLostFrame,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptorProtocol, []int{0} }

type isRequest_Request interface {
	isRequest_Request()
	MarshalTo([]byte) (int, error)
	Size() int
}

type Request_CreateRoom struct {
	CreateRoom *CreateRoom `protobuf:"bytes,4,opt,name=createRoom,oneof"`
}
type Request_JoinRoom struct {
	JoinRoom *JoinRoom `protobuf:"bytes,5,opt,name=joinRoom,oneof"`
}
type Request_LeaveRoom struct {
	LeaveRoom *LeaveRoom `protobuf:"bytes,6,opt,name=leaveRoom,oneof"`
}

func (*Request_CreateRoom) isRequest_Request() {}
func (*Request_JoinRoom) isRequest_Request()   {}
func (*Request_LeaveRoom) isRequest_Request()  {}

func (m *Request) GetRequest() isRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *Request) GetCreateRoom() *CreateRoom {
	if x, ok := m.GetRequest().(*Request_CreateRoom); ok {
		return x.CreateRoom
	}
	return nil
}

func (m *Request) GetJoinRoom() *JoinRoom {
	if x, ok := m.GetRequest().(*Request_JoinRoom); ok {
		return x.JoinRoom
	}
	return nil
}

func (m *Request) GetLeaveRoom() *LeaveRoom {
	if x, ok := m.GetRequest().(*Request_LeaveRoom); ok {
		return x.LeaveRoom
	}
	return nil
}

func (m *Request) GetCommand() *Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *Request) GetRequestLostFrame() *RequestLostFrame {
	if m != nil {
		return m.RequestLostFrame
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Request) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Request_OneofMarshaler, _Request_OneofUnmarshaler, _Request_OneofSizer, []interface{}{
		(*Request_CreateRoom)(nil),
		(*Request_JoinRoom)(nil),
		(*Request_LeaveRoom)(nil),
	}
}

func _Request_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Request)
	// request
	switch x := m.Request.(type) {
	case *Request_CreateRoom:
		_ = b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreateRoom); err != nil {
			return err
		}
	case *Request_JoinRoom:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.JoinRoom); err != nil {
			return err
		}
	case *Request_LeaveRoom:
		_ = b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LeaveRoom); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Request.Request has unexpected type %T", x)
	}
	return nil
}

func _Request_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Request)
	switch tag {
	case 4: // request.createRoom
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CreateRoom)
		err := b.DecodeMessage(msg)
		m.Request = &Request_CreateRoom{msg}
		return true, err
	case 5: // request.joinRoom
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(JoinRoom)
		err := b.DecodeMessage(msg)
		m.Request = &Request_JoinRoom{msg}
		return true, err
	case 6: // request.leaveRoom
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LeaveRoom)
		err := b.DecodeMessage(msg)
		m.Request = &Request_LeaveRoom{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Request_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Request)
	// request
	switch x := m.Request.(type) {
	case *Request_CreateRoom:
		s := proto.Size(x.CreateRoom)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_JoinRoom:
		s := proto.Size(x.JoinRoom)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_LeaveRoom:
		s := proto.Size(x.LeaveRoom)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// response
type Response struct {
	// -----------------房间模块接口---------------
	//
	// Types that are valid to be assigned to Response:
	//	*Response_Exception
	//	*Response_CreateRoomRet
	//	*Response_JoinRoomRet
	//	*Response_LeaveRoomRet
	Response      isResponse_Response `protobuf_oneof:"response"`
	SyncFramePush []*Frame            `protobuf:"bytes,50,rep,name=syncFramePush" json:"syncFramePush,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptorProtocol, []int{1} }

type isResponse_Response interface {
	isResponse_Response()
	MarshalTo([]byte) (int, error)
	Size() int
}

type Response_Exception struct {
	Exception uint32 `protobuf:"varint,3,opt,name=exception,proto3,oneof"`
}
type Response_CreateRoomRet struct {
	CreateRoomRet *CreateRoomRet `protobuf:"bytes,4,opt,name=createRoomRet,oneof"`
}
type Response_JoinRoomRet struct {
	JoinRoomRet *JoinRoomRet `protobuf:"bytes,5,opt,name=joinRoomRet,oneof"`
}
type Response_LeaveRoomRet struct {
	LeaveRoomRet *LeaveRoomRet `protobuf:"bytes,6,opt,name=leaveRoomRet,oneof"`
}

func (*Response_Exception) isResponse_Response()     {}
func (*Response_CreateRoomRet) isResponse_Response() {}
func (*Response_JoinRoomRet) isResponse_Response()   {}
func (*Response_LeaveRoomRet) isResponse_Response()  {}

func (m *Response) GetResponse() isResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *Response) GetException() uint32 {
	if x, ok := m.GetResponse().(*Response_Exception); ok {
		return x.Exception
	}
	return 0
}

func (m *Response) GetCreateRoomRet() *CreateRoomRet {
	if x, ok := m.GetResponse().(*Response_CreateRoomRet); ok {
		return x.CreateRoomRet
	}
	return nil
}

func (m *Response) GetJoinRoomRet() *JoinRoomRet {
	if x, ok := m.GetResponse().(*Response_JoinRoomRet); ok {
		return x.JoinRoomRet
	}
	return nil
}

func (m *Response) GetLeaveRoomRet() *LeaveRoomRet {
	if x, ok := m.GetResponse().(*Response_LeaveRoomRet); ok {
		return x.LeaveRoomRet
	}
	return nil
}

func (m *Response) GetSyncFramePush() []*Frame {
	if m != nil {
		return m.SyncFramePush
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Response) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Response_OneofMarshaler, _Response_OneofUnmarshaler, _Response_OneofSizer, []interface{}{
		(*Response_Exception)(nil),
		(*Response_CreateRoomRet)(nil),
		(*Response_JoinRoomRet)(nil),
		(*Response_LeaveRoomRet)(nil),
	}
}

func _Response_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Response)
	// response
	switch x := m.Response.(type) {
	case *Response_Exception:
		_ = b.EncodeVarint(3<<3 | proto.WireVarint)
		_ = b.EncodeVarint(uint64(x.Exception))
	case *Response_CreateRoomRet:
		_ = b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreateRoomRet); err != nil {
			return err
		}
	case *Response_JoinRoomRet:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.JoinRoomRet); err != nil {
			return err
		}
	case *Response_LeaveRoomRet:
		_ = b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LeaveRoomRet); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Response.Response has unexpected type %T", x)
	}
	return nil
}

func _Response_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Response)
	switch tag {
	case 3: // response.exception
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Response = &Response_Exception{uint32(x)}
		return true, err
	case 4: // response.createRoomRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CreateRoomRet)
		err := b.DecodeMessage(msg)
		m.Response = &Response_CreateRoomRet{msg}
		return true, err
	case 5: // response.joinRoomRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(JoinRoomRet)
		err := b.DecodeMessage(msg)
		m.Response = &Response_JoinRoomRet{msg}
		return true, err
	case 6: // response.leaveRoomRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LeaveRoomRet)
		err := b.DecodeMessage(msg)
		m.Response = &Response_LeaveRoomRet{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Response_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Response)
	// response
	switch x := m.Response.(type) {
	case *Response_Exception:
		n += proto.SizeVarint(3<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Exception))
	case *Response_CreateRoomRet:
		s := proto.Size(x.CreateRoomRet)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_JoinRoomRet:
		s := proto.Size(x.JoinRoomRet)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_LeaveRoomRet:
		s := proto.Size(x.LeaveRoomRet)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Request)(nil), "room.Request")
	proto.RegisterType((*Response)(nil), "room.Response")
}
func (m *Request) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Request) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Request != nil {
		nn1, err := m.Request.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn1
	}
	if m.Command != nil {
		dAtA[i] = 0xc2
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.Command.Size()))
		n2, err := m.Command.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if m.RequestLostFrame != nil {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.RequestLostFrame.Size()))
		n3, err := m.RequestLostFrame.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	return i, nil
}

func (m *Request_CreateRoom) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.CreateRoom != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.CreateRoom.Size()))
		n4, err := m.CreateRoom.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	return i, nil
}
func (m *Request_JoinRoom) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.JoinRoom != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.JoinRoom.Size()))
		n5, err := m.JoinRoom.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	return i, nil
}
func (m *Request_LeaveRoom) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.LeaveRoom != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.LeaveRoom.Size()))
		n6, err := m.LeaveRoom.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n6
	}
	return i, nil
}
func (m *Response) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Response) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Response != nil {
		nn7, err := m.Response.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn7
	}
	if len(m.SyncFramePush) > 0 {
		for _, msg := range m.SyncFramePush {
			dAtA[i] = 0x92
			i++
			dAtA[i] = 0x3
			i++
			i = encodeVarintProtocol(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *Response_Exception) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	dAtA[i] = 0x18
	i++
	i = encodeVarintProtocol(dAtA, i, uint64(m.Exception))
	return i, nil
}
func (m *Response_CreateRoomRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.CreateRoomRet != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.CreateRoomRet.Size()))
		n8, err := m.CreateRoomRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n8
	}
	return i, nil
}
func (m *Response_JoinRoomRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.JoinRoomRet != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.JoinRoomRet.Size()))
		n9, err := m.JoinRoomRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n9
	}
	return i, nil
}
func (m *Response_LeaveRoomRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.LeaveRoomRet != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.LeaveRoomRet.Size()))
		n10, err := m.LeaveRoomRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n10
	}
	return i, nil
}
func encodeVarintProtocol(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *Request) Size() (n int) {
	var l int
	_ = l
	if m.Request != nil {
		n += m.Request.Size()
	}
	if m.Command != nil {
		l = m.Command.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	if m.RequestLostFrame != nil {
		l = m.RequestLostFrame.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}

func (m *Request_CreateRoom) Size() (n int) {
	var l int
	_ = l
	if m.CreateRoom != nil {
		l = m.CreateRoom.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_JoinRoom) Size() (n int) {
	var l int
	_ = l
	if m.JoinRoom != nil {
		l = m.JoinRoom.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_LeaveRoom) Size() (n int) {
	var l int
	_ = l
	if m.LeaveRoom != nil {
		l = m.LeaveRoom.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response) Size() (n int) {
	var l int
	_ = l
	if m.Response != nil {
		n += m.Response.Size()
	}
	if len(m.SyncFramePush) > 0 {
		for _, e := range m.SyncFramePush {
			l = e.Size()
			n += 2 + l + sovProtocol(uint64(l))
		}
	}
	return n
}

func (m *Response_Exception) Size() (n int) {
	var l int
	_ = l
	n += 1 + sovProtocol(uint64(m.Exception))
	return n
}
func (m *Response_CreateRoomRet) Size() (n int) {
	var l int
	_ = l
	if m.CreateRoomRet != nil {
		l = m.CreateRoomRet.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_JoinRoomRet) Size() (n int) {
	var l int
	_ = l
	if m.JoinRoomRet != nil {
		l = m.JoinRoomRet.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_LeaveRoomRet) Size() (n int) {
	var l int
	_ = l
	if m.LeaveRoomRet != nil {
		l = m.LeaveRoomRet.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}

func sovProtocol(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozProtocol(x uint64) (n int) {
	return sovProtocol(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Request) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Request: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Request: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateRoom", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &CreateRoom{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Request = &Request_CreateRoom{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JoinRoom", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &JoinRoom{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Request = &Request_JoinRoom{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LeaveRoom", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &LeaveRoom{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Request = &Request_LeaveRoom{v}
			iNdEx = postIndex
		case 40:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Command", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Command == nil {
				m.Command = &Command{}
			}
			if err := m.Command.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 41:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestLostFrame", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RequestLostFrame == nil {
				m.RequestLostFrame = &RequestLostFrame{}
			}
			if err := m.RequestLostFrame.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProtocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Response) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Response: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Response: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Exception", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Response = &Response_Exception{v}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateRoomRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &CreateRoomRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Response = &Response_CreateRoomRet{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JoinRoomRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &JoinRoomRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Response = &Response_JoinRoomRet{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LeaveRoomRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &LeaveRoomRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Response = &Response_LeaveRoomRet{v}
			iNdEx = postIndex
		case 50:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SyncFramePush", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SyncFramePush = append(m.SyncFramePush, &Frame{})
			if err := m.SyncFramePush[len(m.SyncFramePush)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProtocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipProtocol(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowProtocol
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthProtocol
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowProtocol
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipProtocol(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthProtocol = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowProtocol   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("protocol.proto", fileDescriptorProtocol) }

var fileDescriptorProtocol = []byte{
	// 356 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0x4f, 0x4e, 0x02, 0x31,
	0x14, 0xc6, 0x19, 0x40, 0xfe, 0xbc, 0x71, 0x04, 0xab, 0x26, 0x13, 0x16, 0x13, 0xc2, 0xc6, 0x71,
	0x21, 0x51, 0x58, 0x98, 0x98, 0xb8, 0x21, 0xc6, 0xb0, 0x70, 0x61, 0x7a, 0x81, 0xc9, 0x38, 0xd6,
	0x88, 0x61, 0xa6, 0xd8, 0x16, 0xa3, 0x37, 0xd1, 0x85, 0xf7, 0x71, 0xe9, 0x11, 0x0c, 0x5e, 0xc4,
	0xb4, 0xaf, 0x03, 0x0c, 0xec, 0x5e, 0xbe, 0x7e, 0xbf, 0xb4, 0xef, 0x97, 0xc2, 0xde, 0x4c, 0x70,
	0xc5, 0x13, 0x3e, 0xed, 0x9b, 0x81, 0x54, 0x05, 0xe7, 0x69, 0xa7, 0xf5, 0x28, 0xe2, 0x94, 0xc9,
	0xf7, 0x2c, 0xc1, 0xb8, 0x03, 0x3a, 0xc6, 0xb9, 0xf7, 0x59, 0x86, 0x3a, 0x65, 0x2f, 0x73, 0x26,
	0x15, 0x19, 0x02, 0x24, 0x82, 0xc5, 0x8a, 0x51, 0xce, 0x53, 0xbf, 0xda, 0x75, 0x42, 0x77, 0xb0,
	0xdf, 0x37, 0x65, 0xcc, 0x23, 0x3d, 0x8f, 0x4b, 0x74, 0xad, 0x46, 0x4e, 0xa1, 0xf1, 0xcc, 0x27,
	0x99, 0x41, 0x76, 0x0c, 0xd2, 0x42, 0x44, 0xa7, 0x39, 0xb0, 0xac, 0x90, 0x33, 0x68, 0x4e, 0x59,
	0xfc, 0x8a, 0x57, 0xd4, 0x4c, 0xbf, 0x8d, 0x7d, 0x13, 0xe7, 0xc0, 0xaa, 0x44, 0x8e, 0xa1, 0x9e,
	0xf0, 0x34, 0x8d, 0xb3, 0x07, 0x3f, 0x34, 0x7d, 0xcf, 0x3e, 0x09, 0x43, 0x9a, 0x9f, 0x92, 0x6b,
	0x68, 0x0b, 0xdc, 0xe4, 0x96, 0x4b, 0x75, 0xa3, 0x97, 0xf6, 0x4f, 0x0c, 0xe1, 0x23, 0x61, 0x4f,
	0xa3, 0x29, 0x97, 0x2a, 0x32, 0x52, 0xe8, 0x16, 0x31, 0x6a, 0x42, 0xdd, 0x66, 0xbd, 0xaf, 0x32,
	0x34, 0x28, 0x93, 0x33, 0x9e, 0x49, 0x46, 0x02, 0x68, 0xb2, 0xb7, 0x84, 0xcd, 0xd4, 0x84, 0x67,
	0x7e, 0xa5, 0xeb, 0x84, 0x9e, 0x7e, 0xe6, 0x32, 0x22, 0x57, 0xe0, 0xad, 0xac, 0x50, 0xa6, 0xac,
	0xbf, 0xa3, 0x2d, 0x7f, 0x91, 0x60, 0x6a, 0x5c, 0xa2, 0xc5, 0x36, 0xb9, 0x00, 0x37, 0x77, 0xa4,
	0x61, 0x34, 0x79, 0xb0, 0x61, 0xd2, 0xa2, 0xeb, 0x4d, 0x72, 0x09, 0xbb, 0x4b, 0x57, 0x9a, 0x44,
	0xa7, 0x87, 0x9b, 0x4e, 0x2d, 0x5a, 0xe8, 0x92, 0x73, 0xf0, 0xf4, 0xb7, 0x30, 0x8b, 0xdf, 0xcd,
	0xe5, 0x93, 0x3f, 0xe8, 0x56, 0x42, 0x77, 0xe0, 0x22, 0x8c, 0x86, 0x8a, 0x8d, 0x11, 0x40, 0x43,
	0x58, 0x25, 0xa3, 0xf6, 0xf7, 0x22, 0x70, 0x7e, 0x16, 0x81, 0xf3, 0xbb, 0x08, 0x9c, 0x8f, 0xbf,
	0xa0, 0x74, 0x5f, 0x33, 0x9f, 0x6a, 0xf8, 0x1f, 0x00, 0x00, 0xff, 0xff, 0x01, 0x55, 0x2c, 0x7f,
	0x89, 0x02, 0x00, 0x00,
}
