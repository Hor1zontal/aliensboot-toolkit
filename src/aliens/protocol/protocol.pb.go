// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: protocol.proto

package protocol

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// request
type Request struct {
	Session int32 `protobuf:"varint,1,opt,name=session,proto3" json:"session,omitempty"`
	// ----------------网关模块接口-----------
	//
	// Types that are valid to be assigned to Gate:
	//	*Request_KickOut
	//	*Request_BindService
	//	*Request_PushMessage
	Gate isRequest_Gate `protobuf_oneof:"gate"`
	// Types that are valid to be assigned to Passport:
	//	*Request_C2S_UserRegister
	//	*Request_C2S_UserLogin
	//	*Request_C2S_TokenLogin
	Passport isRequest_Passport `protobuf_oneof:"passport"`
	// -----------------游戏模块接口---------------
	//
	// Types that are valid to be assigned to Game:
	//	*Request_GetUserInfo
	//	*Request_LoginRole
	//	*Request_CreateRole
	//	*Request_RemoveRole
	Game isRequest_Game `protobuf_oneof:"game"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptorProtocol, []int{0} }

type isRequest_Gate interface {
	isRequest_Gate()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isRequest_Passport interface {
	isRequest_Passport()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isRequest_Game interface {
	isRequest_Game()
	MarshalTo([]byte) (int, error)
	Size() int
}

type Request_KickOut struct {
	KickOut *KickOut `protobuf:"bytes,4,opt,name=kickOut,oneof"`
}
type Request_BindService struct {
	BindService *BindService `protobuf:"bytes,5,opt,name=bindService,oneof"`
}
type Request_PushMessage struct {
	PushMessage *PushMessage `protobuf:"bytes,6,opt,name=pushMessage,oneof"`
}
type Request_C2S_UserRegister struct {
	C2S_UserRegister *C2S_UserRegister `protobuf:"bytes,10,opt,name=C2S_UserRegister,json=C2SUserRegister,oneof"`
}
type Request_C2S_UserLogin struct {
	C2S_UserLogin *C2S_UserLogin `protobuf:"bytes,11,opt,name=C2S_UserLogin,json=C2SUserLogin,oneof"`
}
type Request_C2S_TokenLogin struct {
	C2S_TokenLogin *C2S_TokenLogin `protobuf:"bytes,12,opt,name=C2S_TokenLogin,json=C2STokenLogin,oneof"`
}
type Request_GetUserInfo struct {
	GetUserInfo *GetUserInfo `protobuf:"bytes,50,opt,name=getUserInfo,oneof"`
}
type Request_LoginRole struct {
	LoginRole *LoginRole `protobuf:"bytes,51,opt,name=loginRole,oneof"`
}
type Request_CreateRole struct {
	CreateRole *CreateRole `protobuf:"bytes,52,opt,name=createRole,oneof"`
}
type Request_RemoveRole struct {
	RemoveRole *RemoveRole `protobuf:"bytes,53,opt,name=removeRole,oneof"`
}

func (*Request_KickOut) isRequest_Gate()              {}
func (*Request_BindService) isRequest_Gate()          {}
func (*Request_PushMessage) isRequest_Gate()          {}
func (*Request_C2S_UserRegister) isRequest_Passport() {}
func (*Request_C2S_UserLogin) isRequest_Passport()    {}
func (*Request_C2S_TokenLogin) isRequest_Passport()   {}
func (*Request_GetUserInfo) isRequest_Game()          {}
func (*Request_LoginRole) isRequest_Game()            {}
func (*Request_CreateRole) isRequest_Game()           {}
func (*Request_RemoveRole) isRequest_Game()           {}

func (m *Request) GetGate() isRequest_Gate {
	if m != nil {
		return m.Gate
	}
	return nil
}
func (m *Request) GetPassport() isRequest_Passport {
	if m != nil {
		return m.Passport
	}
	return nil
}
func (m *Request) GetGame() isRequest_Game {
	if m != nil {
		return m.Game
	}
	return nil
}

func (m *Request) GetSession() int32 {
	if m != nil {
		return m.Session
	}
	return 0
}

func (m *Request) GetKickOut() *KickOut {
	if x, ok := m.GetGate().(*Request_KickOut); ok {
		return x.KickOut
	}
	return nil
}

func (m *Request) GetBindService() *BindService {
	if x, ok := m.GetGate().(*Request_BindService); ok {
		return x.BindService
	}
	return nil
}

func (m *Request) GetPushMessage() *PushMessage {
	if x, ok := m.GetGate().(*Request_PushMessage); ok {
		return x.PushMessage
	}
	return nil
}

func (m *Request) GetC2S_UserRegister() *C2S_UserRegister {
	if x, ok := m.GetPassport().(*Request_C2S_UserRegister); ok {
		return x.C2S_UserRegister
	}
	return nil
}

func (m *Request) GetC2S_UserLogin() *C2S_UserLogin {
	if x, ok := m.GetPassport().(*Request_C2S_UserLogin); ok {
		return x.C2S_UserLogin
	}
	return nil
}

func (m *Request) GetC2S_TokenLogin() *C2S_TokenLogin {
	if x, ok := m.GetPassport().(*Request_C2S_TokenLogin); ok {
		return x.C2S_TokenLogin
	}
	return nil
}

func (m *Request) GetGetUserInfo() *GetUserInfo {
	if x, ok := m.GetGame().(*Request_GetUserInfo); ok {
		return x.GetUserInfo
	}
	return nil
}

func (m *Request) GetLoginRole() *LoginRole {
	if x, ok := m.GetGame().(*Request_LoginRole); ok {
		return x.LoginRole
	}
	return nil
}

func (m *Request) GetCreateRole() *CreateRole {
	if x, ok := m.GetGame().(*Request_CreateRole); ok {
		return x.CreateRole
	}
	return nil
}

func (m *Request) GetRemoveRole() *RemoveRole {
	if x, ok := m.GetGame().(*Request_RemoveRole); ok {
		return x.RemoveRole
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Request) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Request_OneofMarshaler, _Request_OneofUnmarshaler, _Request_OneofSizer, []interface{}{
		(*Request_KickOut)(nil),
		(*Request_BindService)(nil),
		(*Request_PushMessage)(nil),
		(*Request_C2S_UserRegister)(nil),
		(*Request_C2S_UserLogin)(nil),
		(*Request_C2S_TokenLogin)(nil),
		(*Request_GetUserInfo)(nil),
		(*Request_LoginRole)(nil),
		(*Request_CreateRole)(nil),
		(*Request_RemoveRole)(nil),
	}
}

func _Request_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Request)
	// gate
	switch x := m.Gate.(type) {
	case *Request_KickOut:
		_ = b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.KickOut); err != nil {
			return err
		}
	case *Request_BindService:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BindService); err != nil {
			return err
		}
	case *Request_PushMessage:
		_ = b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PushMessage); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Request.Gate has unexpected type %T", x)
	}
	// passport
	switch x := m.Passport.(type) {
	case *Request_C2S_UserRegister:
		_ = b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.C2S_UserRegister); err != nil {
			return err
		}
	case *Request_C2S_UserLogin:
		_ = b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.C2S_UserLogin); err != nil {
			return err
		}
	case *Request_C2S_TokenLogin:
		_ = b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.C2S_TokenLogin); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Request.Passport has unexpected type %T", x)
	}
	// game
	switch x := m.Game.(type) {
	case *Request_GetUserInfo:
		_ = b.EncodeVarint(50<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetUserInfo); err != nil {
			return err
		}
	case *Request_LoginRole:
		_ = b.EncodeVarint(51<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LoginRole); err != nil {
			return err
		}
	case *Request_CreateRole:
		_ = b.EncodeVarint(52<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreateRole); err != nil {
			return err
		}
	case *Request_RemoveRole:
		_ = b.EncodeVarint(53<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RemoveRole); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Request.Game has unexpected type %T", x)
	}
	return nil
}

func _Request_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Request)
	switch tag {
	case 4: // gate.kickOut
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(KickOut)
		err := b.DecodeMessage(msg)
		m.Gate = &Request_KickOut{msg}
		return true, err
	case 5: // gate.bindService
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BindService)
		err := b.DecodeMessage(msg)
		m.Gate = &Request_BindService{msg}
		return true, err
	case 6: // gate.pushMessage
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PushMessage)
		err := b.DecodeMessage(msg)
		m.Gate = &Request_PushMessage{msg}
		return true, err
	case 10: // passport.C2S_UserRegister
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(C2S_UserRegister)
		err := b.DecodeMessage(msg)
		m.Passport = &Request_C2S_UserRegister{msg}
		return true, err
	case 11: // passport.C2S_UserLogin
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(C2S_UserLogin)
		err := b.DecodeMessage(msg)
		m.Passport = &Request_C2S_UserLogin{msg}
		return true, err
	case 12: // passport.C2S_TokenLogin
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(C2S_TokenLogin)
		err := b.DecodeMessage(msg)
		m.Passport = &Request_C2S_TokenLogin{msg}
		return true, err
	case 50: // game.getUserInfo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetUserInfo)
		err := b.DecodeMessage(msg)
		m.Game = &Request_GetUserInfo{msg}
		return true, err
	case 51: // game.loginRole
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LoginRole)
		err := b.DecodeMessage(msg)
		m.Game = &Request_LoginRole{msg}
		return true, err
	case 52: // game.createRole
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CreateRole)
		err := b.DecodeMessage(msg)
		m.Game = &Request_CreateRole{msg}
		return true, err
	case 53: // game.removeRole
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RemoveRole)
		err := b.DecodeMessage(msg)
		m.Game = &Request_RemoveRole{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Request_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Request)
	// gate
	switch x := m.Gate.(type) {
	case *Request_KickOut:
		s := proto.Size(x.KickOut)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_BindService:
		s := proto.Size(x.BindService)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_PushMessage:
		s := proto.Size(x.PushMessage)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// passport
	switch x := m.Passport.(type) {
	case *Request_C2S_UserRegister:
		s := proto.Size(x.C2S_UserRegister)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_C2S_UserLogin:
		s := proto.Size(x.C2S_UserLogin)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_C2S_TokenLogin:
		s := proto.Size(x.C2S_TokenLogin)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// game
	switch x := m.Game.(type) {
	case *Request_GetUserInfo:
		s := proto.Size(x.GetUserInfo)
		n += proto.SizeVarint(50<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_LoginRole:
		s := proto.Size(x.LoginRole)
		n += proto.SizeVarint(51<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_CreateRole:
		s := proto.Size(x.CreateRole)
		n += proto.SizeVarint(52<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_RemoveRole:
		s := proto.Size(x.RemoveRole)
		n += proto.SizeVarint(53<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// response
type Response struct {
	Session int32 `protobuf:"varint,1,opt,name=session,proto3" json:"session,omitempty"`
	Code    Code  `protobuf:"varint,2,opt,name=code,proto3,enum=protocol.Code" json:"code,omitempty"`
	// -----------------登录模块响应接口---------------
	//
	// Types that are valid to be assigned to Gate:
	//	*Response_BindServiceRet
	Gate isResponse_Gate `protobuf_oneof:"gate"`
	// Types that are valid to be assigned to Passport:
	//	*Response_S2C_UserRegister
	//	*Response_S2C_UserLogin
	//	*Response_S2C_TokenLogin
	Passport isResponse_Passport `protobuf_oneof:"passport"`
	// -----------------游戏模块接口---------------
	//
	// Types that are valid to be assigned to Game:
	//	*Response_GetUserInfoRet
	//	*Response_LoginRoleRet
	//	*Response_CreateRoleRet
	//	*Response_RemoveRoleRet
	Game isResponse_Game `protobuf_oneof:"game"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptorProtocol, []int{1} }

type isResponse_Gate interface {
	isResponse_Gate()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isResponse_Passport interface {
	isResponse_Passport()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isResponse_Game interface {
	isResponse_Game()
	MarshalTo([]byte) (int, error)
	Size() int
}

type Response_BindServiceRet struct {
	BindServiceRet *BindServiceRet `protobuf:"bytes,5,opt,name=bindServiceRet,oneof"`
}
type Response_S2C_UserRegister struct {
	S2C_UserRegister *S2C_UserRegister `protobuf:"bytes,10,opt,name=S2C_UserRegister,json=S2CUserRegister,oneof"`
}
type Response_S2C_UserLogin struct {
	S2C_UserLogin *S2C_UserLogin `protobuf:"bytes,11,opt,name=S2C_UserLogin,json=S2CUserLogin,oneof"`
}
type Response_S2C_TokenLogin struct {
	S2C_TokenLogin *S2C_TokenLogin `protobuf:"bytes,12,opt,name=S2C_TokenLogin,json=S2CTokenLogin,oneof"`
}
type Response_GetUserInfoRet struct {
	GetUserInfoRet *GetUserInfoRet `protobuf:"bytes,50,opt,name=getUserInfoRet,oneof"`
}
type Response_LoginRoleRet struct {
	LoginRoleRet *LoginRoleRet `protobuf:"bytes,51,opt,name=loginRoleRet,oneof"`
}
type Response_CreateRoleRet struct {
	CreateRoleRet *CreateRoleRet `protobuf:"bytes,52,opt,name=createRoleRet,oneof"`
}
type Response_RemoveRoleRet struct {
	RemoveRoleRet *RemoveRoleRet `protobuf:"bytes,53,opt,name=removeRoleRet,oneof"`
}

func (*Response_BindServiceRet) isResponse_Gate()       {}
func (*Response_S2C_UserRegister) isResponse_Passport() {}
func (*Response_S2C_UserLogin) isResponse_Passport()    {}
func (*Response_S2C_TokenLogin) isResponse_Passport()   {}
func (*Response_GetUserInfoRet) isResponse_Game()       {}
func (*Response_LoginRoleRet) isResponse_Game()         {}
func (*Response_CreateRoleRet) isResponse_Game()        {}
func (*Response_RemoveRoleRet) isResponse_Game()        {}

func (m *Response) GetGate() isResponse_Gate {
	if m != nil {
		return m.Gate
	}
	return nil
}
func (m *Response) GetPassport() isResponse_Passport {
	if m != nil {
		return m.Passport
	}
	return nil
}
func (m *Response) GetGame() isResponse_Game {
	if m != nil {
		return m.Game
	}
	return nil
}

func (m *Response) GetSession() int32 {
	if m != nil {
		return m.Session
	}
	return 0
}

func (m *Response) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_Success
}

func (m *Response) GetBindServiceRet() *BindServiceRet {
	if x, ok := m.GetGate().(*Response_BindServiceRet); ok {
		return x.BindServiceRet
	}
	return nil
}

func (m *Response) GetS2C_UserRegister() *S2C_UserRegister {
	if x, ok := m.GetPassport().(*Response_S2C_UserRegister); ok {
		return x.S2C_UserRegister
	}
	return nil
}

func (m *Response) GetS2C_UserLogin() *S2C_UserLogin {
	if x, ok := m.GetPassport().(*Response_S2C_UserLogin); ok {
		return x.S2C_UserLogin
	}
	return nil
}

func (m *Response) GetS2C_TokenLogin() *S2C_TokenLogin {
	if x, ok := m.GetPassport().(*Response_S2C_TokenLogin); ok {
		return x.S2C_TokenLogin
	}
	return nil
}

func (m *Response) GetGetUserInfoRet() *GetUserInfoRet {
	if x, ok := m.GetGame().(*Response_GetUserInfoRet); ok {
		return x.GetUserInfoRet
	}
	return nil
}

func (m *Response) GetLoginRoleRet() *LoginRoleRet {
	if x, ok := m.GetGame().(*Response_LoginRoleRet); ok {
		return x.LoginRoleRet
	}
	return nil
}

func (m *Response) GetCreateRoleRet() *CreateRoleRet {
	if x, ok := m.GetGame().(*Response_CreateRoleRet); ok {
		return x.CreateRoleRet
	}
	return nil
}

func (m *Response) GetRemoveRoleRet() *RemoveRoleRet {
	if x, ok := m.GetGame().(*Response_RemoveRoleRet); ok {
		return x.RemoveRoleRet
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Response) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Response_OneofMarshaler, _Response_OneofUnmarshaler, _Response_OneofSizer, []interface{}{
		(*Response_BindServiceRet)(nil),
		(*Response_S2C_UserRegister)(nil),
		(*Response_S2C_UserLogin)(nil),
		(*Response_S2C_TokenLogin)(nil),
		(*Response_GetUserInfoRet)(nil),
		(*Response_LoginRoleRet)(nil),
		(*Response_CreateRoleRet)(nil),
		(*Response_RemoveRoleRet)(nil),
	}
}

func _Response_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Response)
	// gate
	switch x := m.Gate.(type) {
	case *Response_BindServiceRet:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BindServiceRet); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Response.Gate has unexpected type %T", x)
	}
	// passport
	switch x := m.Passport.(type) {
	case *Response_S2C_UserRegister:
		_ = b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.S2C_UserRegister); err != nil {
			return err
		}
	case *Response_S2C_UserLogin:
		_ = b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.S2C_UserLogin); err != nil {
			return err
		}
	case *Response_S2C_TokenLogin:
		_ = b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.S2C_TokenLogin); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Response.Passport has unexpected type %T", x)
	}
	// game
	switch x := m.Game.(type) {
	case *Response_GetUserInfoRet:
		_ = b.EncodeVarint(50<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetUserInfoRet); err != nil {
			return err
		}
	case *Response_LoginRoleRet:
		_ = b.EncodeVarint(51<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LoginRoleRet); err != nil {
			return err
		}
	case *Response_CreateRoleRet:
		_ = b.EncodeVarint(52<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreateRoleRet); err != nil {
			return err
		}
	case *Response_RemoveRoleRet:
		_ = b.EncodeVarint(53<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RemoveRoleRet); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Response.Game has unexpected type %T", x)
	}
	return nil
}

func _Response_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Response)
	switch tag {
	case 5: // gate.bindServiceRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BindServiceRet)
		err := b.DecodeMessage(msg)
		m.Gate = &Response_BindServiceRet{msg}
		return true, err
	case 10: // passport.S2C_UserRegister
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(S2C_UserRegister)
		err := b.DecodeMessage(msg)
		m.Passport = &Response_S2C_UserRegister{msg}
		return true, err
	case 11: // passport.S2C_UserLogin
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(S2C_UserLogin)
		err := b.DecodeMessage(msg)
		m.Passport = &Response_S2C_UserLogin{msg}
		return true, err
	case 12: // passport.S2C_TokenLogin
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(S2C_TokenLogin)
		err := b.DecodeMessage(msg)
		m.Passport = &Response_S2C_TokenLogin{msg}
		return true, err
	case 50: // game.getUserInfoRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetUserInfoRet)
		err := b.DecodeMessage(msg)
		m.Game = &Response_GetUserInfoRet{msg}
		return true, err
	case 51: // game.loginRoleRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LoginRoleRet)
		err := b.DecodeMessage(msg)
		m.Game = &Response_LoginRoleRet{msg}
		return true, err
	case 52: // game.createRoleRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CreateRoleRet)
		err := b.DecodeMessage(msg)
		m.Game = &Response_CreateRoleRet{msg}
		return true, err
	case 53: // game.removeRoleRet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RemoveRoleRet)
		err := b.DecodeMessage(msg)
		m.Game = &Response_RemoveRoleRet{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Response_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Response)
	// gate
	switch x := m.Gate.(type) {
	case *Response_BindServiceRet:
		s := proto.Size(x.BindServiceRet)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// passport
	switch x := m.Passport.(type) {
	case *Response_S2C_UserRegister:
		s := proto.Size(x.S2C_UserRegister)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_S2C_UserLogin:
		s := proto.Size(x.S2C_UserLogin)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_S2C_TokenLogin:
		s := proto.Size(x.S2C_TokenLogin)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// game
	switch x := m.Game.(type) {
	case *Response_GetUserInfoRet:
		s := proto.Size(x.GetUserInfoRet)
		n += proto.SizeVarint(50<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_LoginRoleRet:
		s := proto.Size(x.LoginRoleRet)
		n += proto.SizeVarint(51<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_CreateRoleRet:
		s := proto.Size(x.CreateRoleRet)
		n += proto.SizeVarint(52<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_RemoveRoleRet:
		s := proto.Size(x.RemoveRoleRet)
		n += proto.SizeVarint(53<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// 推送消息支持多条结构
type Push struct {
	Kick KickType `protobuf:"varint,1,opt,name=kick,proto3,enum=protocol.KickType" json:"kick,omitempty"`
}

func (m *Push) Reset()                    { *m = Push{} }
func (m *Push) String() string            { return proto.CompactTextString(m) }
func (*Push) ProtoMessage()               {}
func (*Push) Descriptor() ([]byte, []int) { return fileDescriptorProtocol, []int{2} }

func (m *Push) GetKick() KickType {
	if m != nil {
		return m.Kick
	}
	return KickType_None
}

func init() {
	proto.RegisterType((*Request)(nil), "protocol.Request")
	proto.RegisterType((*Response)(nil), "protocol.Response")
	proto.RegisterType((*Push)(nil), "protocol.Push")
}
func (m *Request) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Request) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Session != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.Session))
	}
	if m.Gate != nil {
		nn1, err := m.Gate.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn1
	}
	if m.Passport != nil {
		nn2, err := m.Passport.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn2
	}
	if m.Game != nil {
		nn3, err := m.Game.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn3
	}
	return i, nil
}

func (m *Request_KickOut) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.KickOut != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.KickOut.Size()))
		n4, err := m.KickOut.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	return i, nil
}
func (m *Request_BindService) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.BindService != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.BindService.Size()))
		n5, err := m.BindService.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	return i, nil
}
func (m *Request_PushMessage) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.PushMessage != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.PushMessage.Size()))
		n6, err := m.PushMessage.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n6
	}
	return i, nil
}
func (m *Request_C2S_UserRegister) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.C2S_UserRegister != nil {
		dAtA[i] = 0x52
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.C2S_UserRegister.Size()))
		n7, err := m.C2S_UserRegister.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n7
	}
	return i, nil
}
func (m *Request_C2S_UserLogin) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.C2S_UserLogin != nil {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.C2S_UserLogin.Size()))
		n8, err := m.C2S_UserLogin.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n8
	}
	return i, nil
}
func (m *Request_C2S_TokenLogin) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.C2S_TokenLogin != nil {
		dAtA[i] = 0x62
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.C2S_TokenLogin.Size()))
		n9, err := m.C2S_TokenLogin.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n9
	}
	return i, nil
}
func (m *Request_GetUserInfo) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.GetUserInfo != nil {
		dAtA[i] = 0x92
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.GetUserInfo.Size()))
		n10, err := m.GetUserInfo.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n10
	}
	return i, nil
}
func (m *Request_LoginRole) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.LoginRole != nil {
		dAtA[i] = 0x9a
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.LoginRole.Size()))
		n11, err := m.LoginRole.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n11
	}
	return i, nil
}
func (m *Request_CreateRole) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.CreateRole != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.CreateRole.Size()))
		n12, err := m.CreateRole.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n12
	}
	return i, nil
}
func (m *Request_RemoveRole) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.RemoveRole != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.RemoveRole.Size()))
		n13, err := m.RemoveRole.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n13
	}
	return i, nil
}
func (m *Response) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Response) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Session != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.Session))
	}
	if m.Code != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.Code))
	}
	if m.Gate != nil {
		nn14, err := m.Gate.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn14
	}
	if m.Passport != nil {
		nn15, err := m.Passport.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn15
	}
	if m.Game != nil {
		nn16, err := m.Game.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn16
	}
	return i, nil
}

func (m *Response_BindServiceRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.BindServiceRet != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.BindServiceRet.Size()))
		n17, err := m.BindServiceRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n17
	}
	return i, nil
}
func (m *Response_S2C_UserRegister) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.S2C_UserRegister != nil {
		dAtA[i] = 0x52
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.S2C_UserRegister.Size()))
		n18, err := m.S2C_UserRegister.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n18
	}
	return i, nil
}
func (m *Response_S2C_UserLogin) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.S2C_UserLogin != nil {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.S2C_UserLogin.Size()))
		n19, err := m.S2C_UserLogin.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n19
	}
	return i, nil
}
func (m *Response_S2C_TokenLogin) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.S2C_TokenLogin != nil {
		dAtA[i] = 0x62
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.S2C_TokenLogin.Size()))
		n20, err := m.S2C_TokenLogin.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n20
	}
	return i, nil
}
func (m *Response_GetUserInfoRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.GetUserInfoRet != nil {
		dAtA[i] = 0x92
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.GetUserInfoRet.Size()))
		n21, err := m.GetUserInfoRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n21
	}
	return i, nil
}
func (m *Response_LoginRoleRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.LoginRoleRet != nil {
		dAtA[i] = 0x9a
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.LoginRoleRet.Size()))
		n22, err := m.LoginRoleRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n22
	}
	return i, nil
}
func (m *Response_CreateRoleRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.CreateRoleRet != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.CreateRoleRet.Size()))
		n23, err := m.CreateRoleRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n23
	}
	return i, nil
}
func (m *Response_RemoveRoleRet) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.RemoveRoleRet != nil {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.RemoveRoleRet.Size()))
		n24, err := m.RemoveRoleRet.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n24
	}
	return i, nil
}
func (m *Push) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Push) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Kick != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintProtocol(dAtA, i, uint64(m.Kick))
	}
	return i, nil
}

func encodeVarintProtocol(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *Request) Size() (n int) {
	var l int
	_ = l
	if m.Session != 0 {
		n += 1 + sovProtocol(uint64(m.Session))
	}
	if m.Gate != nil {
		n += m.Gate.Size()
	}
	if m.Passport != nil {
		n += m.Passport.Size()
	}
	if m.Game != nil {
		n += m.Game.Size()
	}
	return n
}

func (m *Request_KickOut) Size() (n int) {
	var l int
	_ = l
	if m.KickOut != nil {
		l = m.KickOut.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_BindService) Size() (n int) {
	var l int
	_ = l
	if m.BindService != nil {
		l = m.BindService.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_PushMessage) Size() (n int) {
	var l int
	_ = l
	if m.PushMessage != nil {
		l = m.PushMessage.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_C2S_UserRegister) Size() (n int) {
	var l int
	_ = l
	if m.C2S_UserRegister != nil {
		l = m.C2S_UserRegister.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_C2S_UserLogin) Size() (n int) {
	var l int
	_ = l
	if m.C2S_UserLogin != nil {
		l = m.C2S_UserLogin.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_C2S_TokenLogin) Size() (n int) {
	var l int
	_ = l
	if m.C2S_TokenLogin != nil {
		l = m.C2S_TokenLogin.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_GetUserInfo) Size() (n int) {
	var l int
	_ = l
	if m.GetUserInfo != nil {
		l = m.GetUserInfo.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_LoginRole) Size() (n int) {
	var l int
	_ = l
	if m.LoginRole != nil {
		l = m.LoginRole.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_CreateRole) Size() (n int) {
	var l int
	_ = l
	if m.CreateRole != nil {
		l = m.CreateRole.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Request_RemoveRole) Size() (n int) {
	var l int
	_ = l
	if m.RemoveRole != nil {
		l = m.RemoveRole.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response) Size() (n int) {
	var l int
	_ = l
	if m.Session != 0 {
		n += 1 + sovProtocol(uint64(m.Session))
	}
	if m.Code != 0 {
		n += 1 + sovProtocol(uint64(m.Code))
	}
	if m.Gate != nil {
		n += m.Gate.Size()
	}
	if m.Passport != nil {
		n += m.Passport.Size()
	}
	if m.Game != nil {
		n += m.Game.Size()
	}
	return n
}

func (m *Response_BindServiceRet) Size() (n int) {
	var l int
	_ = l
	if m.BindServiceRet != nil {
		l = m.BindServiceRet.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_S2C_UserRegister) Size() (n int) {
	var l int
	_ = l
	if m.S2C_UserRegister != nil {
		l = m.S2C_UserRegister.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_S2C_UserLogin) Size() (n int) {
	var l int
	_ = l
	if m.S2C_UserLogin != nil {
		l = m.S2C_UserLogin.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_S2C_TokenLogin) Size() (n int) {
	var l int
	_ = l
	if m.S2C_TokenLogin != nil {
		l = m.S2C_TokenLogin.Size()
		n += 1 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_GetUserInfoRet) Size() (n int) {
	var l int
	_ = l
	if m.GetUserInfoRet != nil {
		l = m.GetUserInfoRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_LoginRoleRet) Size() (n int) {
	var l int
	_ = l
	if m.LoginRoleRet != nil {
		l = m.LoginRoleRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_CreateRoleRet) Size() (n int) {
	var l int
	_ = l
	if m.CreateRoleRet != nil {
		l = m.CreateRoleRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Response_RemoveRoleRet) Size() (n int) {
	var l int
	_ = l
	if m.RemoveRoleRet != nil {
		l = m.RemoveRoleRet.Size()
		n += 2 + l + sovProtocol(uint64(l))
	}
	return n
}
func (m *Push) Size() (n int) {
	var l int
	_ = l
	if m.Kick != 0 {
		n += 1 + sovProtocol(uint64(m.Kick))
	}
	return n
}

func sovProtocol(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozProtocol(x uint64) (n int) {
	return sovProtocol(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Request) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Request: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Request: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Session", wireType)
			}
			m.Session = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Session |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field KickOut", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &KickOut{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Gate = &Request_KickOut{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BindService", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &BindService{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Gate = &Request_BindService{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PushMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &PushMessage{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Gate = &Request_PushMessage{v}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field C2S_UserRegister", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &C2S_UserRegister{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Passport = &Request_C2S_UserRegister{v}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field C2S_UserLogin", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &C2S_UserLogin{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Passport = &Request_C2S_UserLogin{v}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field C2S_TokenLogin", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &C2S_TokenLogin{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Passport = &Request_C2S_TokenLogin{v}
			iNdEx = postIndex
		case 50:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GetUserInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &GetUserInfo{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Game = &Request_GetUserInfo{v}
			iNdEx = postIndex
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoginRole", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &LoginRole{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Game = &Request_LoginRole{v}
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateRole", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &CreateRole{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Game = &Request_CreateRole{v}
			iNdEx = postIndex
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoveRole", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &RemoveRole{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Game = &Request_RemoveRole{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProtocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Response) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Response: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Response: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Session", wireType)
			}
			m.Session = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Session |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= (Code(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BindServiceRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &BindServiceRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Gate = &Response_BindServiceRet{v}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field S2C_UserRegister", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &S2C_UserRegister{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Passport = &Response_S2C_UserRegister{v}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field S2C_UserLogin", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &S2C_UserLogin{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Passport = &Response_S2C_UserLogin{v}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field S2C_TokenLogin", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &S2C_TokenLogin{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Passport = &Response_S2C_TokenLogin{v}
			iNdEx = postIndex
		case 50:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GetUserInfoRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &GetUserInfoRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Game = &Response_GetUserInfoRet{v}
			iNdEx = postIndex
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoginRoleRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &LoginRoleRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Game = &Response_LoginRoleRet{v}
			iNdEx = postIndex
		case 52:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateRoleRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &CreateRoleRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Game = &Response_CreateRoleRet{v}
			iNdEx = postIndex
		case 53:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoveRoleRet", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProtocol
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &RemoveRoleRet{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Game = &Response_RemoveRoleRet{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProtocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProtocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Push) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProtocol
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Push: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Push: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Kick", wireType)
			}
			m.Kick = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Kick |= (KickType(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProtocol(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProtocol
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipProtocol(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowProtocol
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProtocol
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthProtocol
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowProtocol
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipProtocol(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthProtocol = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowProtocol   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("protocol.proto", fileDescriptorProtocol) }

var fileDescriptorProtocol = []byte{
	// 591 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x94, 0xcd, 0x6e, 0xd3, 0x40,
	0x14, 0x85, 0xeb, 0x28, 0x69, 0xcb, 0x4d, 0x6a, 0xaa, 0x11, 0x3f, 0x26, 0x48, 0x55, 0xd5, 0x05,
	0xea, 0x2a, 0x0b, 0xb7, 0x15, 0x12, 0x48, 0x95, 0x9a, 0x80, 0x30, 0x02, 0x04, 0x1a, 0x97, 0xb5,
	0x95, 0x3a, 0xb7, 0xae, 0x95, 0xc4, 0x63, 0x3c, 0xe3, 0x4a, 0xac, 0x79, 0x09, 0x1e, 0x89, 0x25,
	0x8f, 0x80, 0xf2, 0x24, 0xe8, 0x8e, 0xed, 0x8c, 0x6d, 0xda, 0xb0, 0x8b, 0x7d, 0xce, 0xf9, 0x32,
	0x1a, 0x7d, 0x32, 0xd8, 0x69, 0x26, 0x94, 0x08, 0xc5, 0x62, 0xa4, 0x7f, 0xb0, 0xdd, 0xea, 0x79,
	0xb8, 0x9f, 0xa1, 0xcc, 0x17, 0x2a, 0x14, 0x33, 0x2c, 0xb2, 0x21, 0x44, 0x53, 0x55, 0xfd, 0xb6,
	0xd3, 0xa9, 0x94, 0xa9, 0xc8, 0x94, 0xc9, 0x96, 0x65, 0x76, 0xf4, 0xb3, 0x07, 0x3b, 0x1c, 0xbf,
	0xe5, 0x28, 0x15, 0x73, 0x60, 0x47, 0xa2, 0x94, 0xb1, 0x48, 0x1c, 0xeb, 0xd0, 0x3a, 0xee, 0xf1,
	0xea, 0x91, 0x8d, 0x60, 0x67, 0x1e, 0x87, 0xf3, 0xcf, 0xb9, 0x72, 0xba, 0x87, 0xd6, 0x71, 0xdf,
	0x65, 0xa3, 0xf5, 0x59, 0x28, 0x08, 0x44, 0xae, 0xbc, 0x2d, 0x5e, 0x95, 0xd8, 0x2b, 0xe8, 0x5f,
	0xc5, 0xc9, 0xcc, 0xc7, 0xec, 0x36, 0x0e, 0xd1, 0xe9, 0xe9, 0xcd, 0x13, 0xb3, 0xa1, 0x30, 0x90,
	0x45, 0xea, 0x6d, 0xf1, 0x7a, 0x99, 0xb6, 0x69, 0x2e, 0x6f, 0x3e, 0xa1, 0x94, 0xd3, 0x08, 0x9d,
	0xed, 0xf6, 0x96, 0xc2, 0x60, 0x59, 0xa4, 0xb4, 0xad, 0x95, 0xd9, 0x3b, 0xd8, 0x9f, 0xb8, 0x7e,
	0xf0, 0x55, 0x62, 0xc6, 0x31, 0x8a, 0xa5, 0xc2, 0xcc, 0x01, 0x0d, 0x18, 0x1a, 0x40, 0xbb, 0xe1,
	0x59, 0xfc, 0xe1, 0xc4, 0xf5, 0xeb, 0xaf, 0xd8, 0x39, 0xec, 0x55, 0xb5, 0x8f, 0x22, 0x8a, 0x13,
	0xa7, 0xaf, 0x29, 0x4f, 0xff, 0xa5, 0xe8, 0xd8, 0xb3, 0xf8, 0xa0, 0x44, 0xe8, 0x67, 0x76, 0x01,
	0x36, 0x15, 0x2e, 0xc5, 0x1c, 0x93, 0x02, 0x30, 0xd0, 0x00, 0xa7, 0x09, 0x30, 0xb9, 0x67, 0x71,
	0xfa, 0x47, 0xf3, 0x82, 0xbd, 0x86, 0x7e, 0x84, 0x8a, 0x90, 0xef, 0x93, 0x6b, 0xe1, 0xb8, 0xed,
	0x03, 0x44, 0xa8, 0x82, 0x5c, 0x62, 0x16, 0xc4, 0xc9, 0xb5, 0xf0, 0x3a, 0xbc, 0xde, 0x66, 0xa7,
	0xf0, 0x60, 0x41, 0x14, 0x2e, 0x16, 0xe8, 0x9c, 0xe8, 0xe9, 0x23, 0x33, 0xd5, 0x51, 0x90, 0x89,
	0x05, 0x7a, 0x1d, 0x6e, 0x8a, 0xec, 0x25, 0x40, 0x98, 0xe1, 0x54, 0xa1, 0x9e, 0x9d, 0xea, 0xd9,
	0x63, 0x33, 0x2b, 0xb2, 0x6a, 0x57, 0xab, 0xd2, 0x30, 0xc3, 0xa5, 0xb8, 0x2d, 0x86, 0x67, 0xed,
	0x61, 0x91, 0xad, 0x87, 0xa6, 0x3a, 0xde, 0x86, 0x2e, 0x89, 0x3a, 0x06, 0xd8, 0xad, 0x24, 0x2d,
	0xde, 0x2d, 0xf1, 0xe8, 0x47, 0x0f, 0x76, 0x39, 0xca, 0x54, 0x24, 0x12, 0x37, 0xb8, 0x79, 0x04,
	0x5d, 0xf2, 0xde, 0xe9, 0x1c, 0x5a, 0xc7, 0xb6, 0x6b, 0xd7, 0x2e, 0x58, 0xcc, 0x90, 0xeb, 0x8c,
	0xbd, 0x01, 0xbb, 0xa6, 0x18, 0x47, 0x55, 0x2a, 0x39, 0xbc, 0x5b, 0xc9, 0x20, 0x43, 0xd2, 0xb9,
	0xb5, 0x21, 0xbb, 0x7c, 0x77, 0xf2, 0x1f, 0xbb, 0xda, 0x0d, 0xb2, 0xcb, 0x77, 0x27, 0x6d, 0xbb,
	0xaa, 0xda, 0x3d, 0x76, 0x35, 0x62, 0xb2, 0xab, 0x44, 0xac, 0xed, 0xa2, 0xc2, 0x26, 0xbb, 0x9a,
	0x39, 0xd9, 0xe5, 0xbb, 0x93, 0x9a, 0x5d, 0x6f, 0xc1, 0xae, 0xf9, 0x42, 0x37, 0x52, 0x08, 0xf6,
	0xfc, 0x1e, 0xc1, 0xf4, 0x95, 0x74, 0x78, 0x6b, 0xc4, 0xce, 0x61, 0xb0, 0xd6, 0x87, 0x20, 0x27,
	0xed, 0x73, 0x18, 0xd5, 0x4a, 0x42, 0xa3, 0xcf, 0x2e, 0x60, 0xcf, 0x68, 0x44, 0x80, 0x42, 0xba,
	0x67, 0x77, 0x4a, 0x57, 0x12, 0x9a, 0x0b, 0x42, 0x18, 0xa1, 0x08, 0x71, 0xd6, 0x46, 0xd4, 0xf4,
	0xab, 0x10, 0x8d, 0xc5, 0x46, 0x0b, 0x47, 0xd0, 0xfd, 0x92, 0xcb, 0x1b, 0xf6, 0x02, 0xba, 0xf4,
	0x75, 0xd3, 0xf6, 0xd9, 0xf5, 0xef, 0xdf, 0x87, 0x38, 0x9c, 0x5f, 0x7e, 0x4f, 0x91, 0xeb, 0x7c,
	0x3c, 0xf8, 0xb5, 0x3a, 0xb0, 0x7e, 0xaf, 0x0e, 0xac, 0x3f, 0xab, 0x03, 0xeb, 0x6a, 0x5b, 0xd7,
	0x4e, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x8b, 0x2a, 0x4f, 0xe0, 0xbb, 0x05, 0x00, 0x00,
}
