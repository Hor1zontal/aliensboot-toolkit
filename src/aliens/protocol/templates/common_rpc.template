/*******************************************************************************
 * Copyright (c) 2015, 2017 aliens idea(xiamen) Corporation and others.
 * All rights reserved. 
 * Date:
 *     2018/6/15
 * Contributors:
 *     aliens idea(xiamen) Corporation - initial API and implementation
 *     jialin.he <kylinh@gmail.com>
 *******************************************************************************/
package rpc

import (
	"aliens/module/cluster/dispatch"
	"aliens/protocol"
	"aliens/exception"
	"aliens/log"
	"aliens/protocol/base"
)

var ${Module} = &${module}RPCHandle{"${module}"}


type ${module}RPCHandle struct {
	name string
}


func (this *${module}RPCHandle) RequestNode(node string, request *${package}.Request) *${package}.Response {
	rpcRet, err := dispatch.RequestNodeMessage(this.name, node, request)
	if err != nil {
    	log.Error(err)
    	exception.GameException(protocol.Code_InvalidService)
    }
    return rpcRet
}

//func (this *${module}RPCHandle) Request(request *${package}.Request) *${package}.Response {
//	rpcRet, err := dispatch.RPC.SyncRequest(this.name, request)
//	if err != nil {
//        log.Error(err)
//        exception.GameException(protocol.Code_InvalidService)
//    }
//    return rpcRet
//}

<message>
func (this *${module}RPCHandle) ${o_request}(node string, request *${package}.${o_request}) *${package}.${o_response} {
	message := &${package}.Request{
		${Module}:&${package}.Request_${o_request}{
			${o_request}:request,
		},
	}
	messageRet := this.RequestNode(node, message)
	return messageRet.Get${o_response}()
}
<message>